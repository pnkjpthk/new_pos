from tkinter import*
import sqlite3
from PIL import Image,ImageTk
from tkinter.font import nametofont
import tkinter as tk
import time
import datetime
import requests
import getmac
import calendar
import datetime as dt
import json
from datetime import date
from tkinter import filedialog
from tkinter import messagebox as ms
from tkinter.messagebox import showinfo,showerror
import webbrowser
from tkinter.filedialog import askopenfilename
from win32api import GetSystemMetrics
import os
import base64
import re
from io import BytesIO
import win32file
import subprocess
import tkinter.ttk as ttk
from os import path,system,_exit
import random
import math
import twilio
import sqlite3
import win32api
import win32print
import win32gui
import win32ui
import win32con
import tempfile
from time import strftime 
from tkcalendar import Calendar, DateEntry

screen_width, screen_height = GetSystemMetrics(0), GetSystemMetrics(1)
with sqlite3.connect('restaurent_pos.db') as db:
    c = db.cursor()
c.execute("""CREATE TABLE IF NOT EXISTS Tip_Collection(id INTEGER PRIMARY KEY AUTOINCREMENT,Waiter_Name TEXT,Waiter_id TEXT,Tip_Amount INTEGER,Date_ INTEGER,Time);""")   
c.execute("""CREATE TABLE IF NOT EXISTS Delivery_address(id INTEGER PRIMARY KEY AUTOINCREMENT,Coustmer_name TEXT,Contect_no INTEGER,Alternate_no INTEGER,E_mail TEXT,Address TEXT);""")
c.execute("""CREATE TABLE IF NOT EXISTS Take_Out_Order(id INTEGER PRIMARY KEY AUTOINCREMENT,Waiter_Name TEXT,Waiter_id TEXT,Item_name TEXT,Item_Quantity INTEGER,Price INTEGER );""")
c.execute("""CREATE TABLE IF NOT EXISTS Coustmer_Details(id INTEGER PRIMARY KEY AUTOINCREMENT,Coustmer_name TEXT,Contact_no INTEGER,E_mail_id TEXT,Address_1 TEXT,Address_2 TEXT);""")
c.execute("""CREATE TABLE IF NOT EXISTS user(id INTEGER PRIMARY KEY AUTOINCREMENT,Full_name TEXT NOT NULL ,username NOT NULL,password NOT NULL,contact_number INTEGER,User_question TEXT,Answer TEXT);""")
c.execute("""CREATE TABLE IF NOT EXISTS Kitchen_store(id INTEGER PRIMARY KEY AUTOINCREMENT,Date_ INTEGER,Time_ INTEGER,Item_name TEXT,Quantity INTEGER,Rate INTEGER,Chef TEXT); """)
c.execute("""CREATE TABLE IF NOT EXISTS Restaurent_Details(id INTEGER PRIMARY KEY AUTOINCREMENT,Store_name TEXT,Contact_number INTEGER,E_mail TEXT,Website TEXT,Address TEXT,Pin INTEGER,City TEXT,State TEXT,Country TEXT,Gst_no TEXT,mac TEXT NOT NULL,lisence TEXT NOT NULL);""")
c.execute("""CREATE TABLE IF NOT EXISTS Employee_Details(id INTEGER PRIMARY KEY AUTOINCREMENT,Employee_name TEXT,Employee_id TEXT,Contact_no INTEGER,Alternate_no INTEGER,Designation TEXT,E_mail TEXT,Account_no INTEGER,Ifci_code TEXT); """)
c.execute("""CREATE TABLE IF NOT EXISTS Restaurent_Detail(id INTEGER PRIMARY KEY AUTOINCREMENT,Store_name TEXT,Contact_number INTEGER,E_mail TEXT,Website TEXT,Address TEXT,Pin INTEGER,City TEXT,State TEXT,Country TEXT,Gst_no TEXT);""")
c.execute("""CREATE TABLE IF NOT EXISTS Reports(id INTEGER PRIMARY KEY AUTOINCREMENT,Item_name TEXT,Quantity INTEGER,Amount INTEGER,Date,Time,Order_type TEXT); """)
c.execute("""CREATE TABLE IF NOT EXISTS Defaulte(id INTEGER PRIMARY KEY AUTOINCREMENT,Name TEXT NOT NULL,Location TEXT NOT NULL,description TEXT NOT NULL,date datetime NOT NULL default current_timestamp); """)
c.execute("""CREATE TABLE IF NOT EXISTS Tables(id INTEGER PRIMARY KEY AUTOINCREMENT ,Table_no INTEGER);""")
db.commit()

item_name_list = []
item_quantity_list = []
item_price_list = []
label_list = []
VERSION = "2.0"

data1 ="""

"""
img = Image.open(BytesIO(base64.b64decode(data1)))
data ="""

"""
img1 = Image.open(BytesIO(base64.b64decode(data)))
data2 = """ 

"""
img2 = Image.open(BytesIO(base64.b64decode(data2)))
data3 =""" 

"""
img3 = Image.open(BytesIO(base64.b64decode(data3)))
data4 =""" 
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aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyI+PHhtcDpDcmVhdG9yVG9vbD5XaW5kb3dzIFBob3RvIEVkaXRvciAxMC4wLjEwMDExLjE2Mzg0PC94bXA6Q3JlYXRvclRvb2w+PHhtcDpDcmVhdGVEYXRlPjIwMTktMTItMjFUMTA6MTU6NDQuMDI0PC94bXA6Q3JlYXRlRGF0ZT48L3JkZjpEZXNjcmlwdGlvbj48L3JkZjpSREY+PC94OnhtcG1ldGE+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3hwYWNrZXQgZW5kPSd3Jz8+/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwKDAwLCgsLDQ4SEA0OEQ4LCxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQUFBQU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
"""
img4 = Image.open(BytesIO(base64.b64decode(data4)))
data5 = """ 

"""
img5 = Image.open(BytesIO(base64.b64decode(data5)))
data6 = """
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
"""
img6 = Image.open(BytesIO(base64.b64decode(data6)))
data7 = """

"""
img7 = Image.open(BytesIO(base64.b64decode(data7)))
data8 = """ 

"""
img8 = Image.open(BytesIO(base64.b64decode(data8)))
data9 ="""

"""
img9 = Image.open(BytesIO(base64.b64decode(data9)))
data10 = """

"""

img10 = Image.open(BytesIO(base64.b64decode(data10)))
data11 = """ 

"""
img11 = Image.open(BytesIO(base64.b64decode(data11)))
data12 = """ 
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UHhsQHLAAAAAAAAAAAAKdmVjdG9yRGF0YWJvb2wBAAAAAFBnUHNlbnVtAAAAAFBnUHMAAAAAUGdQQwAAAABMZWZ0VW50RiNSbHQAAAAAAAAAAAAAAABUb3AgVW50RiNSbHQAAAAAAAAAAAAAAABTY2wgVW50RiNQcmNAWQAAAAAAAAAAABBjcm9wV2hlblByaW50aW5nYm9vbAAAAAAOY3JvcFJlY3RCb3R0b21sb25nAAAAAAAAAAxjcm9wUmVjdExlZnRsb25nAAAAAAAAAA1jcm9wUmVjdFJpZ2h0bG9uZwAAAAAAAAALY3JvcFJlY3RUb3Bsb25nAAAAAAA4QklNA+0AAAAAABABLAAAAAEAAQEsAAAAAQABOEJJTQQmAAAAAAAOAAAAAAAAAAAAAD+AAAA4QklNA/IAAAAAAAoAAP///////wAAOEJJTQQNAAAAAAAEAAAAeDhCSU0EGQAAAAAABAAAAB44QklNA/MAAAAAAAkAAAAAAAAAAAEAOEJJTScQAAAAAAAKAAEAAAAAAAAAAjhCSU0D9QAAAAAASAAvZmYAAQBsZmYABgAAAAAAAQAvZmYAAQChmZoABgAAAAAAAQAyAAAAAQBaAAAABgAAAAAAAQA1AAAAAQAtAAAABgAAAAAAAThCSU0D+AAAAAAAcAAA/////////////////////////////wPoAAAAAP////////////////////////////8D6AAAAAD/////////////////////////////A+gAAAAA/////////////////////////////wPoAAA4QklNBAAAAAAAAAIADThCSU0EAgAAAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4QklNBDAAAAAAAA4BAQEBAQEBAQEBAQEBAThCSU0ELQAAAAAABgABAAAAKThCSU0ECAAAAAAAJAAAAAEAAAJAAAACQAAAAAQAACyEAAAAFNcAAAAt4AAAADRAAThCSU0EHgAAAAAABAAAAAA4QklNBBoAAAAAA0MAAAAGAAAAAAAAAAAAAAH0AAACvAAAAAcAbQBtAHAAbwBzAC0AMwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAACvAAAAfQAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAA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ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDIgNzkuMTYwOTI0LCAyMDE3LzA3LzEzLTAxOjA2OjM5ICAgICAgICAiPg0KCTxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+DQoJCTxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiIHhtbG5zOnN0TWZzPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvTWFuaWZlc3RJdGVtIyIgeG1sbnM6aWxsdXN0cmF0b3I9Imh0dHA6Ly9ucy5hZG9iZS5jb20vaWxsdXN0cmF0b3IvMS4wLyIgeG1sbnM6eG1wVFBnPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvdC9wZy8iIHhtbG5zOnN0RGltPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvRGltZW5zaW9ucyMiIHhtbG5zOnN0Rm50PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvRm9udCMiIHhtbG5zOnhtcEc9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9nLyIgeG1sbnM6cGRmPSJodHRwOi8vbnMuYWRvYmUuY29tL3BkZi8xLjMvIiB4bWxuczpwaG90b3Nob3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEuMC8iIGRjOmZvcm1hdD0iaW1hZ2UvanBlZyIgeG1wOk1ldGFkYXRhRGF0ZT0iMjAyMC0wMS0xM1QxNjozNjo0MiswNTozMCIgeG1wOk1vZGlmeURhdGU9IjIwMjAtMDEtMTNUMTY6MzY6NDIrMDU6MzAiIHhtcDpDcmVhdGVEYXRlPSIyMDEyLTA3LTA1VDE0OjQ0OjEyKzA4OjAwIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoV2luZG93cykiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NzE2ODI3ZGUtOWU0ZC0xNTRjLTliNzMtYzQ2YmZiMTcwYTA3IiB4bXBNTTpEb2N1bWVudElEPSJhZG9iZTpkb2NpZDpwaG90b3Nob3A6YzM4MzJlMzUtMDcyMS1mZjQwLWJjMjMtNzg1ZDRlNDZiMWVmIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InV1aWQ6NUQyMDg5MjQ5M0JGREIxMTkxNEE4NTkwRDMxNTA4QzgiIHhtcE1NOlJlbmRpdGlvbkNsYXNzPSJwcm9vZjpwZGYiIGlsbHVzdHJhdG9yOlR5cGU9IkRvY3VtZW50IiBpbGx1c3RyYXRvcjpTdGFydHVwUHJvZmlsZT0iUHJpbnQiIHhtcFRQZzpIYXNWaXNpYmxlT3ZlcnByaW50PSJGYWxzZSIgeG1wVFBnOkhhc1Zpc2libGVUcmFuc3BhcmVuY3k9IlRydWUiIHhtcFRQZzpOUGFnZXM9IjEiIHBkZjpQcm9kdWNlcj0iQWRvYmUgUERGIGxpYnJhcnkgOS45MCIgcGhvdG9zaG9wOkxlZ2FjeUlQVENEaWdlc3Q9Ijg0M0M5MTYzNkI2Q0M2QjEyMUQxQzU2RTM2M0E4M0RFIiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIiBwaG90b3Nob3A6SUNDUHJvZmlsZT0ic1JHQiBJRUM2MTk2Ni0yLjEiPg0KCQkJPGRjOnRpdGxlPg0KCQkJCTxyZGY6QWx0Pg0KCQkJCQk8cmRmOmxpIHhtbDpsYW5nPSJ4LWRlZmF1bHQiPmhlYWRlcjwvcmRmOmxpPg0KCQkJCTwvcmRmOkFsdD4NCgkJCTwvZGM6dGl0bGU+DQoJCQk8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo0NmEzNDFhYS00ZGRkLWMxNDctYjNlYy0zMjVmMTI0ZGE4ZmEiIHN0UmVmOmRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDo0NGRjNGQ0Yi02MTkzLThkNGItYjc4Ny04NjM0NjU1ODkzNzIiIHN0UmVmOm9yaWdpbmFsRG9jdW1lbnRJRD0idXVpZDo1RDIwODkyNDkzQkZEQjExOTE0QTg1OTBEMzE1MDhDOCIgc3RSZWY6cmVuZGl0aW9uQ2xhc3M9InByb29mOnBkZiIvPg0KCQkJPHhtcE1NOkhpc3Rvcnk+DQoJCQkJPHJkZjpTZXE+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo0QzhDMUJCQzVGQzZFMTExQURCRkFEQTYzQUZGRDg3OCIgc3RFdnQ6d2hlbj0iMjAxMi0wNy0wNVQxMzoxMDoyNyswODowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgSWxsdXN0cmF0b3IgQ1M1LjEiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4NCgkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjREOEMxQkJDNUZDNkUxMTFBREJGQURBNjNBRkZEODc4IiBzdEV2dDp3aGVuPSIyMDEyLTA3LTA1VDEzOjU1OjE0KzA4OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBJbGx1c3RyYXRvciBDUzUuMSIgc3RFdnQ6Y2hhbmdlZD0iLyIvPg0KCQkJCQk8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6NEU4QzFCQkM1RkM2RTExMUFEQkZBREE2M0FGRkQ4NzgiIHN0RXZ0OndoZW49IjIwMTItMDctMDVUMTQ6NDQ6MTMrMDg6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIElsbHVzdHJhdG9yIENTNS4xIiBzdEV2dDpjaGFuZ2VkPSIvIi8+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjb252ZXJ0ZWQiIHN0RXZ0OnBhcmFtZXRlcnM9ImZyb20gYXBwbGljYXRpb24vcGRmIHRvIGFwcGxpY2F0aW9uL3ZuZC5hZG9iZS5waG90b3Nob3AiLz4NCgkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249ImRlcml2ZWQiIHN0RXZ0OnBhcmFtZXRlcnM9ImNvbnZlcnRlZCBmcm9tIGFwcGxpY2F0aW9uL3ZuZC5hZG9iZS5waG90b3Nob3AgdG8gaW1hZ2UvanBlZyIvPg0KCQkJCQk8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6RDA1MkM2QkM1MkM2RTExMUFCNjFDRDI2QzcyNUEyMzMiIHN0RXZ0OndoZW49IjIwMTItMDctMDVUMTU6MDM6MTYrMDg6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyIgc3RFdnQ6Y2hhbmdlZD0iLyIvPg0KCQkJCQk8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6Yzk1N2U2NTQtNzkyMi01MjQ1LThiZGItOTllNjU4YTMyMDE4IiBzdEV2dDp3aGVuPSIyMDE5LTEyLTE2VDE3OjAzOjEzLTA3OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ0MgKFdpbmRvd3MpIiBzdEV2dDpjaGFuZ2VkPSIvIi8+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjb252ZXJ0ZWQiIHN0RXZ0OnBhcmFtZXRlcnM9ImZyb20gaW1hZ2UvanBlZyB0byBhcHBsaWNhdGlvbi92bmQuYWRvYmUucGhvdG9zaG9wIi8+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJkZXJpdmVkIiBzdEV2dDpwYXJhbWV0ZXJzPSJjb252ZXJ0ZWQgZnJvbSBpbWFnZS9qcGVnIHRvIGFwcGxpY2F0aW9uL3ZuZC5hZG9iZS5waG90b3Nob3AiLz4NCgkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjQwN2JmMmY0LTBmMTYtODM0ZS04Yzc2LTc4YjQxZjQ4NmQ4OSIgc3RFdnQ6d2hlbj0iMjAxOS0xMi0xNlQxNzowMzoxMy0wNzowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENDIChXaW5kb3dzKSIgc3RFdnQ6Y2hhbmdlZD0iLyIvPg0KCQkJCQk8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6NDZhMzQxYWEtNGRkZC1jMTQ3LWIzZWMtMzI1ZjEyNGRhOGZhIiBzdEV2dDp3aGVuPSIyMDIwLTAxLTEzVDE2OjM2OjQyKzA1OjMwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ0MgKFdpbmRvd3MpIiBzdEV2dDpjaGFuZ2VkPSIvIi8+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjb252ZXJ0ZWQiIHN0RXZ0OnBhcmFtZXRlcnM9ImZyb20gYXBwbGljYXRpb24vdm5kLmFkb2JlLnBob3Rvc2hvcCB0byBpbWFnZS9qcGVnIi8+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJkZXJpdmVkIiBzdEV2dDpwYXJhbWV0ZXJzPSJjb252ZXJ0ZWQgZnJvbSBhcHBsaWNhdGlvbi92bmQuYWRvYmUucGhvdG9zaG9wIHRvIGltYWdlL2pwZWciLz4NCgkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjcxNjgyN2RlLTllNGQtMTU0Yy05YjczLWM0NmJmYjE3MGEwNyIgc3RFdnQ6d2hlbj0iMjAyMC0wMS0xM1QxNjozNjo0MiswNTozMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENDIChXaW5kb3dzKSIgc3RFdnQ6Y2hhbmdlZD0iLyIvPg0KCQkJCTwvcmRmOlNlcT4NCgkJCTwveG1wTU06SGlzdG9yeT4NCgkJCTx4bXBNTTpNYW5pZmVzdD4NCgkJCQk8cmRmOlNlcT4NCgkJCQkJPHJkZjpsaT4NCgkJCQkJCTxyZGY6RGVzY3JpcHRpb24gc3RNZnM6bGlua0Zvcm09IkVtYmVkQnlSZWZlcmVuY2UiPg0KCQkJCQkJCTxzdE1mczpyZWZlcmVuY2Ugc3RSZWY6ZmlsZVBhdGg9IkM6XFVzZXJzXHBoaWxcRGVza3RvcFxsYW5jZS1wZXJzb25hbFx0YXR1bmdcRklOQUxcdGF0dW5nIGxvZ28ucHNkIi8+DQoJCQkJCQk8L3JkZjpEZXNjcmlwdGlvbj4NCgkJCQkJPC9yZGY6bGk+DQoJCQkJCTxyZGY6bGk+DQoJCQkJCQk8cmRmOkRlc2NyaXB0aW9uIHN0TWZzOmxpbmtGb3JtPSJFbWJlZEJ5UmVmZXJlbmNlIj4NCgkJCQkJCQk8c3RNZnM6cmVmZXJlbmNlIHN0UmVmOmZpbGVQYXRoPSJDOlxVc2Vyc1xwaGlsXERlc2t0b3BcbGFuY2UtcGVyc29uYWxcdGF0dW5nXHBhdG90aW0uanBnIi8+DQoJCQkJCQk8L3JkZjpEZXNjcmlwdGlvbj4NCgkJCQkJPC9yZGY6bGk+DQoJCQkJCTxyZGY6bGk+DQoJCQkJCQk8cmRmOkRlc2NyaXB0aW9uIHN0TWZzOmxpbmtGb3JtPSJFbWJlZEJ5UmVmZXJlbmNlIj4NCgkJCQkJCQk8c3RNZnM6cmVmZXJlbmNlIHN0UmVmOmZpbGVQYXRoPSJDOlxVc2Vyc1xwaGlsXERlc2t0b3BcbGFuY2UtcGVyc29uYWxcdGF0dW5nXHByYXducy5qcGciLz4NCgkJCQkJCTwvcmRmOkRlc2NyaXB0aW9uPg0KCQkJCQk8L3JkZjpsaT4NCgkJCQkJPHJkZjpsaT4NCgkJCQkJCTxyZGY6RGVzY3JpcHRpb24gc3RNZnM6bGlua0Zvcm09IkVtYmVkQnlSZWZlcmVuY2UiPg0KCQkJCQkJCTxzdE1mczpyZWZlcmVuY2Ugc3RSZWY6ZmlsZVBhdGg9IkM6XFVzZXJzXHBoaWxcRGVza3RvcFxsYW5jZS1wZXJzb25hbFx0YXR1bmdcbWFoaS5qcGciLz4NCgkJCQkJCTwvcmRmOkRlc2NyaXB0aW9uPg0KCQkJCQk8L3JkZjpsaT4NCgkJCQkJPHJkZjpsaT4NCgkJCQkJCTxyZGY6RGVzY3JpcHRpb24gc3RNZnM6bGlua0Zvcm09IkVtYmVkQnlSZWZlcmVuY2UiPg0KCQkJCQkJCTxzdE1mczpyZWZlcmVuY2Ugc3RSZWY6ZmlsZVBhdGg9IkM6XFVzZXJzXHBoaWxcRGVza3RvcFxsYW5jZS1wZXJzb25hbFx0YXR1bmdccGljaGkyLmpwZyIvPg0KCQkJCQkJPC9yZGY6RGVzY3JpcHRpb24+DQoJCQkJCTwvcmRmOmxpPg0KCQkJCQk8cmRmOmxpPg0KCQkJCQkJPHJkZjpEZXNjcmlwdGlvbiBzdE1mczpsaW5rRm9ybT0iRW1iZWRCeVJlZmVyZW5jZSI+DQoJCQkJCQkJPHN0TWZzOnJlZmVyZW5jZSBzdFJlZjpmaWxlUGF0aD0iQzpcVXNlcnNccGhpbFxEZXNrdG9wXGxhbmNlLXBlcnNvbmFsXHRhdHVuZ1xoYWxvLmpwZyIvPg0KCQkJCQkJPC9yZGY6RGVzY3JpcHRpb24+DQoJCQkJCTwvcmRmOmxpPg0KCQkJCQk8cmRmOmxpPg0KCQkJCQkJPHJkZjpEZXNjcmlwdGlvbiBzdE1mczpsaW5rRm9ybT0iRW1iZWRCeVJlZmVyZW5jZSI+DQoJCQkJCQkJPHN0TWZzOnJlZmVyZW5jZSBzdFJlZjpmaWxlUGF0aD0iQzpcVXNlcnNccGhpbFxEZXNrdG9wXGxhbmNlLXBlcnNvbmFsXHRhdHVuZ1wzODQ0MDBfMTAxNTAzODQzNTg4MTg5MTVfMTQ2MDEyMDIwOF9uLmpwZyIvPg0KCQkJCQkJPC9yZGY6RGVzY3JpcHRpb24+DQoJCQkJCTwvcmRmOmxpPg0KCQkJCTwvcmRmOlNlcT4NCgkJCTwveG1wTU06TWFuaWZlc3Q+DQoJCQk8eG1wVFBnOk1heFBhZ2VTaXplIHN0RGltOnc9IjkyMC4wMDAwMDAiIHN0RGltOmg9IjM2MC4wMDAwMDAiIHN0RGltOnVuaXQ9IlBvaW50cyIvPg0KCQkJPHhtcFRQZzpGb250cz4NCgkJCQk8cmRmOkJhZz4NCgkJCQkJPHJkZjpsaSBzdEZudDpmb250TmFtZT0iQXJub1Byby1DYXB0aW9uIiBzdEZudDpmb250RmFtaWx5PSJBcm5vIFBybyIgc3RGbnQ6Zm9udEZhY2U9IkNhcHRpb24iIHN0Rm50OmZvbnRUeXBlPSJPcGVuIFR5cGUiIHN0Rm50OnZlcnNpb25TdHJpbmc9IlZlcnNpb24gMS4wMTE7UFMgMS4wMDA7aG90Y29udiAxLjAuNTA7bWFrZW90Zi5saWIyLjAuMTYwMjUiIHN0Rm50OmNvbXBvc2l0ZT0iRmFsc2UiIHN0Rm50OmZvbnRGaWxlTmFtZT0iQXJub1Byby1DYXB0aW9uLm90ZiIvPg0KCQkJCQk8cmRmOmxpIHN0Rm50OmZvbnROYW1lPSJBcmlhbE1UIiBzdEZudDpmb250RmFtaWx5PSJBcmlhbCIgc3RGbnQ6Zm9udEZhY2U9IlJlZ3VsYXIiIHN0Rm50OmZvbnRUeXBlPSJPcGVuIFR5cGUiIHN0Rm50OnZlcnNpb25TdHJpbmc9IlZlcnNpb24gNS4xMCIgc3RGbnQ6Y29tcG9zaXRlPSJGYWxzZSIgc3RGbnQ6Zm9udEZpbGVOYW1lPSJhcmlhbC50dGYiLz4NCgkJCQk8L3JkZjpCYWc+DQoJCQk8L3htcFRQZzpGb250cz4NCgkJCTx4bXBUUGc6UGxhdGVOYW1lcz4NCgkJCQk8cmRmOlNlcT4NCgkJCQkJPHJkZjpsaT5DeWFuPC9yZGY6bGk+DQoJCQkJCTxyZGY6bGk+TWFnZW50YTwvcmRmOmxpPg0KCQkJCQk8cmRmOmxpPlllbGxvdzwvcmRmOmxpPg0KCQkJCQk8cmRmOmxpPkJsYWNrPC9yZGY6bGk+DQoJCQkJPC9yZGY6U2VxPg0KCQkJPC94bXBUUGc6UGxhdGVOYW1lcz4NCgkJCTx4bXBUUGc6U3dhdGNoR3JvdXBzPg0KCQkJCTxyZGY6U2VxPg0KCQkJCQk8cmRmOmxpPg0KCQkJCQkJPHJkZjpEZXNjcmlwdGlvbiB4bXBHOmdyb3VwTmFtZT0iRGVmYXVsdCBTd2F0Y2ggR3JvdXAiIHhtcEc6Z3JvdXBUeXBlPSIwIj4NCgkJCQkJCQk8eG1wRzpDb2xvcmFudHM+DQoJCQkJCQkJCTxyZGY6U2VxPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IldoaXRlIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMjU1IiB4bXBHOmdyZWVuPSIyNTUiIHhtcEc6Ymx1ZT0iMjU1Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQmxhY2siIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSIzNSIgeG1wRzpncmVlbj0iMzEiIHhtcEc6Ymx1ZT0iMzIiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDTVlLIFJlZCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjIzNSIgeG1wRzpncmVlbj0iMjgiIHhtcEc6Ymx1ZT0iMzYiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDTVlLIFllbGxvdyIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjI1NSIgeG1wRzpncmVlbj0iMjQwIiB4bXBHOmJsdWU9IjAiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDTVlLIEdyZWVuIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMCIgeG1wRzpncmVlbj0iMTY0IiB4bXBHOmJsdWU9IjgxIi8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQ01ZSyBDeWFuIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMCIgeG1wRzpncmVlbj0iMTcyIiB4bXBHOmJsdWU9IjIzNyIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkNNWUsgQmx1ZSIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjQ2IiB4bXBHOmdyZWVuPSI0OSIgeG1wRzpibHVlPSIxNDQiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDTVlLIE1hZ2VudGEiIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSIyMzQiIHhtcEc6Z3JlZW49IjAiIHhtcEc6Ymx1ZT0iMTM4Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0xNSBNPTEwMCBZPTkwIEs9MTAiIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSIxODkiIHhtcEc6Z3JlZW49IjMwIiB4bXBHOmJsdWU9IjQ1Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0wIE09OTAgWT04NSBLPTAiIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSIyMzciIHhtcEc6Z3JlZW49IjY0IiB4bXBHOmJsdWU9IjU0Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0wIE09ODAgWT05NSBLPTAiIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSIyMzkiIHhtcEc6Z3JlZW49IjkwIiB4bXBHOmJsdWU9IjQwIi8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0wIE09NTAgWT0xMDAgSz0wIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMjQ1IiB4bXBHOmdyZWVuPSIxNDUiIHhtcEc6Ymx1ZT0iMzAiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTAgTT0zNSBZPTg1IEs9MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjI0OSIgeG1wRzpncmVlbj0iMTc0IiB4bXBHOmJsdWU9IjY0Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz01IE09MCBZPTkwIEs9MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjI0OCIgeG1wRzpncmVlbj0iMjM1IiB4bXBHOmJsdWU9IjQ5Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0yMCBNPTAgWT0xMDAgSz0wIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMjEzIiB4bXBHOmdyZWVuPSIyMjEiIHhtcEc6Ymx1ZT0iMzUiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTUwIE09MCBZPTEwMCBLPTAiIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSIxMzgiIHhtcEc6Z3JlZW49IjE5NiIgeG1wRzpibHVlPSI2MyIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9NzUgTT0wIFk9MTAwIEs9MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjU1IiB4bXBHOmdyZWVuPSIxNzgiIHhtcEc6Ymx1ZT0iNzQiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTg1IE09MTAgWT0xMDAgSz0xMCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjAiIHhtcEc6Z3JlZW49IjE0NiIgeG1wRzpibHVlPSI2OSIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9OTAgTT0zMCBZPTk1IEs9MzAiIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSIwIiB4bXBHOmdyZWVuPSIxMDQiIHhtcEc6Ymx1ZT0iNTYiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTc1IE09MCBZPTc1IEs9MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjQxIiB4bXBHOmdyZWVuPSIxNzkiIHhtcEc6Ymx1ZT0iMTE1Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz04MCBNPTEwIFk9NDUgSz0wIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMCIgeG1wRzpncmVlbj0iMTY1IiB4bXBHOmJsdWU9IjE1NSIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9NzAgTT0xNSBZPTAgSz0wIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMzgiIHhtcEc6Z3JlZW49IjE2OCIgeG1wRzpibHVlPSIyMjMiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTg1IE09NTAgWT0wIEs9MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjI3IiB4bXBHOmdyZWVuPSIxMTciIHhtcEc6Ymx1ZT0iMTg2Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0xMDAgTT05NSBZPTUgSz0wIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iNDMiIHhtcEc6Z3JlZW49IjU2IiB4bXBHOmJsdWU9IjE0MiIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9MTAwIE09MTAwIFk9MjUgSz0yNSIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjM4IiB4bXBHOmdyZWVuPSIzNCIgeG1wRzpibHVlPSI5NyIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9NzUgTT0xMDAgWT0wIEs9MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjEwMSIgeG1wRzpncmVlbj0iNDUiIHhtcEc6Ymx1ZT0iMTQzIi8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz01MCBNPTEwMCBZPTAgSz0wIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMTQzIiB4bXBHOmdyZWVuPSIzOSIgeG1wRzpibHVlPSIxNDEiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTM1IE09MTAwIFk9MzUgSz0xMCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjE1NyIgeG1wRzpncmVlbj0iMzEiIHhtcEc6Ymx1ZT0iOTkiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTEwIE09MTAwIFk9NTAgSz0wIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMjE2IiB4bXBHOmdyZWVuPSIyOCIgeG1wRzpibHVlPSI5MiIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9MCBNPTk1IFk9MjAgSz0wIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMjM1IiB4bXBHOmdyZWVuPSI0MSIgeG1wRzpibHVlPSIxMjMiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTI1IE09MjUgWT00MCBLPTAiIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSIxOTIiIHhtcEc6Z3JlZW49IjE3OSIgeG1wRzpibHVlPSIxNTMiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTQwIE09NDUgWT01MCBLPTUiIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSIxNTMiIHhtcEc6Z3JlZW49IjEzMSIgeG1wRzpibHVlPSIxMjEiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTUwIE09NTAgWT02MCBLPTI1IiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMTEzIiB4bXBHOmdyZWVuPSIxMDEiIHhtcEc6Ymx1ZT0iODgiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTU1IE09NjAgWT02NSBLPTQwIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iOTAiIHhtcEc6Z3JlZW49Ijc0IiB4bXBHOmJsdWU9IjY2Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0yNSBNPTQwIFk9NjUgSz0wIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMTk0IiB4bXBHOmdyZWVuPSIxNTIiIHhtcEc6Ymx1ZT0iMTA3Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0zMCBNPTUwIFk9NzUgSz0xMCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjE2NyIgeG1wRzpncmVlbj0iMTI0IiB4bXBHOmJsdWU9Ijc5Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0zNSBNPTYwIFk9ODAgSz0yNSIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjEzNyIgeG1wRzpncmVlbj0iOTMiIHhtcEc6Ymx1ZT0iNTkiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTQwIE09NjUgWT05MCBLPTM1IiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMTE3IiB4bXBHOmdyZWVuPSI3NiIgeG1wRzpibHVlPSI0MCIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9NDAgTT03MCBZPTEwMCBLPTUwIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iOTYiIHhtcEc6Z3JlZW49IjU2IiB4bXBHOmJsdWU9IjE5Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz01MCBNPTcwIFk9ODAgSz03MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjU5IiB4bXBHOmdyZWVuPSIzNSIgeG1wRzpibHVlPSIyMCIvPg0KCQkJCQkJCQk8L3JkZjpTZXE+DQoJCQkJCQkJPC94bXBHOkNvbG9yYW50cz4NCgkJCQkJCTwvcmRmOkRlc2NyaXB0aW9uPg0KCQkJCQk8L3JkZjpsaT4NCgkJCQkJPHJkZjpsaT4NCgkJCQkJCTxyZGY6RGVzY3JpcHRpb24geG1wRzpncm91cE5hbWU9IkdyYXlzIiB4bXBHOmdyb3VwVHlwZT0iMSI+DQoJCQkJCQkJPHhtcEc6Q29sb3JhbnRzPg0KCQkJCQkJCQk8cmRmOlNlcT4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTAgTT0wIFk9MCBLPTEwMCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjM1IiB4bXBHOmdyZWVuPSIzMSIgeG1wRzpibHVlPSIzMiIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9MCBNPTAgWT0wIEs9OTAiIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSI2NCIgeG1wRzpncmVlbj0iNjQiIHhtcEc6Ymx1ZT0iNjUiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTAgTT0wIFk9MCBLPTgwIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iODgiIHhtcEc6Z3JlZW49Ijg5IiB4bXBHOmJsdWU9IjkxIi8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0wIE09MCBZPTAgSz03MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjEwOSIgeG1wRzpncmVlbj0iMTEwIiB4bXBHOmJsdWU9IjExMiIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9MCBNPTAgWT0wIEs9NjAiIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSIxMjgiIHhtcEc6Z3JlZW49IjEyOCIgeG1wRzpibHVlPSIxMzEiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTAgTT0wIFk9MCBLPTUwIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMTQ1IiB4bXBHOmdyZWVuPSIxNDciIHhtcEc6Ymx1ZT0iMTUwIi8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0wIE09MCBZPTAgSz00MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjE2NSIgeG1wRzpncmVlbj0iMTY3IiB4bXBHOmJsdWU9IjE3MCIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9MCBNPTAgWT0wIEs9MzAiIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSIxODYiIHhtcEc6Z3JlZW49IjE4OCIgeG1wRzpibHVlPSIxOTAiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTAgTT0wIFk9MCBLPTIwIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMjA3IiB4bXBHOmdyZWVuPSIyMDkiIHhtcEc6Ymx1ZT0iMjEwIi8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0wIE09MCBZPTAgSz0xMCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjIyOSIgeG1wRzpncmVlbj0iMjMwIiB4bXBHOmJsdWU9IjIzMSIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9MCBNPTAgWT0wIEs9NSIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjI0MCIgeG1wRzpncmVlbj0iMjQwIiB4bXBHOmJsdWU9IjI0MSIvPg0KCQkJCQkJCQk8L3JkZjpTZXE+DQoJCQkJCQkJPC94bXBHOkNvbG9yYW50cz4NCgkJCQkJCTwvcmRmOkRlc2NyaXB0aW9uPg0KCQkJCQk8L3JkZjpsaT4NCgkJCQkJPHJkZjpsaT4NCgkJCQkJCTxyZGY6RGVzY3JpcHRpb24geG1wRzpncm91cE5hbWU9IkJyaWdodHMiIHhtcEc6Z3JvdXBUeXBlPSIxIj4NCgkJCQkJCQk8eG1wRzpDb2xvcmFudHM+DQoJCQkJCQkJCTxyZGY6U2VxPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9MCBNPTEwMCBZPTEwMCBLPTAiIHhtcEc6bW9kZT0iUkdCIiB4bXBHOnR5cGU9IlBST0NFU1MiIHhtcEc6cmVkPSIyMzUiIHhtcEc6Z3JlZW49IjI4IiB4bXBHOmJsdWU9IjM2Ii8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz0wIE09NzUgWT0xMDAgSz0wIiB4bXBHOm1vZGU9IlJHQiIgeG1wRzp0eXBlPSJQUk9DRVNTIiB4bXBHOnJlZD0iMjQwIiB4bXBHOmdyZWVuPSIxMDEiIHhtcEc6Ymx1ZT0iMzQiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTAgTT0xMCBZPTk1IEs9MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjI1NSIgeG1wRzpncmVlbj0iMjIwIiB4bXBHOmJsdWU9IjIxIi8+DQoJCQkJCQkJCQk8cmRmOmxpIHhtcEc6c3dhdGNoTmFtZT0iQz04NSBNPTEwIFk9MTAwIEs9MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjAiIHhtcEc6Z3JlZW49IjE2MCIgeG1wRzpibHVlPSI3NSIvPg0KCQkJCQkJCQkJPHJkZjpsaSB4bXBHOnN3YXRjaE5hbWU9IkM9MTAwIE09OTAgWT0wIEs9MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjM0IiB4bXBHOmdyZWVuPSI2NCIgeG1wRzpibHVlPSIxNTIiLz4NCgkJCQkJCQkJCTxyZGY6bGkgeG1wRzpzd2F0Y2hOYW1lPSJDPTYwIE09OTAgWT0wIEs9MCIgeG1wRzptb2RlPSJSR0IiIHhtcEc6dHlwZT0iUFJPQ0VTUyIgeG1wRzpyZWQ9IjEyNyIgeG1wRzpncmVlbj0iNjMiIHhtcEc6Ymx1ZT0iMTUwIi8+DQoJCQkJCQkJCTwvcmRmOlNlcT4NCgkJCQkJCQk8L3htcEc6Q29sb3JhbnRzPg0KCQkJCQkJPC9yZGY6RGVzY3JpcHRpb24+DQoJCQkJCTwvcmRmOmxpPg0KCQkJCTwvcmRmOlNlcT4NCgkJCTwveG1wVFBnOlN3YXRjaEdyb3Vwcz4NCgkJCTxwaG90b3Nob3A6VGV4dExheWVycz4NCgkJCQk8cmRmOkJhZz4NCgkJCQkJPHJkZjpsaSBwaG90b3Nob3A6TGF5ZXJOYW1lPSJGdWxsIE5hbWUiIHBob3Rvc2hvcDpMYXllclRleHQ9IkZ1bGwgTmFtZSIvPg0KCQkJCQk8cmRmOmxpIHBob3Rvc2hvcDpMYXllck5hbWU9IlVzZXIgTmFtZSIgcGhvdG9zaG9wOkxheWVyVGV4dD0iVXNlciBOYW1lIi8+DQoJCQkJCTxyZGY6bGkgcGhvdG9zaG9wOkxheWVyTmFtZT0iUGFzc3dvcmQiIHBob3Rvc2hvcDpMYXllclRleHQ9IlBhc3N3b3JkIi8+DQoJCQkJCTxyZGY6bGkgcGhvdG9zaG9wOkxheWVyTmFtZT0iQ29uZmlybSBQYXNzd29yZCAiIHBob3Rvc2hvcDpMYXllclRleHQ9IkNvbmZpcm0gUGFzc3dvcmQgIi8+DQoJCQkJCTxyZGY6bGkgcGhvdG9zaG9wOkxheWVyTmFtZT0iRW1haWwiIHBob3Rvc2hvcDpMYXllclRleHQ9IkVtYWlsIi8+DQoJCQkJCTxyZGY6bGkgcGhvdG9zaG9wOkxheWVyTmFtZT0iQ29udGFjdCIgcGhvdG9zaG9wOkxheWVyVGV4dD0iQ29udGFjdCIvPg0KCQkJCQk8cmRmOmxpIHBob3Rvc2hvcDpMYXllck5hbWU9IkVtcGxveW1lbnQgaWQiIHBob3Rvc2hvcDpMYXllclRleHQ9IkVtcGxveW1lbnQgaWQiLz4NCgkJCQkJPHJkZjpsaSBwaG90b3Nob3A6TGF5ZXJOYW1lPSJVc2VyIFJlZ2lzdHJhdGlvbiIgcGhvdG9zaG9wOkxheWVyVGV4dD0iVXNlciBSZWdpc3RyYXRpb24iLz4NCgkJCQkJPHJkZjpsaSBwaG90b3Nob3A6TGF5ZXJOYW1lPSJMb2dpbiAiIHBob3Rvc2hvcDpMYXllclRleHQ9IkxvZ2luICIvPg0KCQkJCQk8cmRmOmxpIHBob3Rvc2hvcDpMYXllck5hbWU9IlNpZ24gdXAiIHBob3Rvc2hvcDpMYXllclRleHQ9IlNpZ24gdXAiLz4NCgkJCQk8L3JkZjpCYWc+DQoJCQk8L3Bob3Rvc2hvcDpUZXh0TGF5ZXJzPg0KCQk8L3JkZjpEZXNjcmlwdGlvbj4NCgk8L3JkZjpSREY+DQo8L3g6eG1wbWV0YT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg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0qDTwV03R4YpBIllZbuXy4BmmIO4blByxK/pQo3SVXtLWOytY4YY44YYwEWNFCqijgAAcAD0qYcr/tVw4rESrS5n6JLRJLojuw+FhRhyx73be7b6ssUUUVmdQUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAUdQsIdVspre6ghuLeZDHJFKgZJFPBBB4IPoa5//hQPgMD/AJEnwj/4J7f/AOIrrqKAMbw14Q0nwTZta6Ppen6Tas5kaGztkgjLnALFVAGTgc+1bNFFAHP+OfhvoPxM0b+z/EGj2OsWedwjuoRJsPqpPKn3BBrxLxF/wTN+GOv33nR2+uaavP7qC+8xMk5/5bLIwx04OMV9G0mT6U1KS2IlTjLc8U+H37Avwx+Hs0My6G2sXEJBWTVJ2uVyDkHyuIs/8A7CvYrW2jtYEjjVY441CqqjCqBwAB6Vaopcze44xUdgooooKCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigBqdKFTBoQ806ktgG+XR5dOopgFFFFADTHxS7fmzS0UAN8unAbRRRQAUUUUAN8ugpTqKACiiigAooooAKKKKACgjIoooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAbHTqbHTqNeomgAoozRmgAooooAKKM0ZoAKKKKACijNFABRRmjNABRRnFGc0AFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFF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
"""
img12 = Image.open(BytesIO(base64.b64decode(data12)))

class winop:
        def __init__(self,path=None):
            self.path= path

        def get_drivestats(self):
            sectPerCluster, bytesPerSector, freeClusters, totalClusters = win32file.GetDiskFreeSpace(self.path)
            total_space = totalClusters*sectPerCluster*bytesPerSector
            free_space = freeClusters*sectPerCluster*bytesPerSector
            return total_space, free_space

def printjob(pr,data):
    X=50; Y=40
    hDC = win32ui.CreateDC ()
    try:
        hDC.CreatePrinterDC (pr)
        doc = "Bill"
    except Exception as msg:
        print(str(msg))
    try:
        hDC.StartDoc ("Bill")
    except:
        pass
    hDC.StartPage ()
    for item in data:
        hDC.TextOut(X,Y,item)
        Y += 50
    hDC.EndPage ()
    hDC.EndDoc ()

def printer():
    printer_info = win32print.EnumPrinters (
       win32print.PRINTER_ENUM_LOCAL | win32print.PRINTER_ENUM_CONNECTIONS
    )
    rows = [name for (flags, description, name, comment) in 
    printer_info]
    return rows

def run_command(self,command):
            process = subprocess.Popen(split(command), stdout=subprocess.PIPE)
            l1 = []
            while True:
                output = process.stdout.readline().strip().decode()
                if output == '' and process.poll() is not None:
                    break
                if output:
                    l1.append(output)
            return l1

class AutocompleteEntry(Entry):
    def __init__(self, autocompleteList, *args, **kwargs):

        if 'listboxLength' in kwargs:
            self.listboxLength = kwargs['listboxLength']
            del kwargs['listboxLength']
        else:
            self.listboxLength = 8

        if 'matchesFunction' in kwargs:
            self.matchesFunction = kwargs['matchesFunction']
            del kwargs['matchesFunction']
        else:
            def matches(fieldValue, acListEntry):
                pattern = re.compile('.*' + re.escape(fieldValue) + '.*', re.IGNORECASE)
                return re.match(pattern, acListEntry)
                
            self.matchesFunction = matches

        
        Entry.__init__(self, *args, **kwargs)
        self.focus()

        self.autocompleteList = autocompleteList
        
        self.var = self["textvariable"]
        if self.var == '':
        	self.var = self["textvariable"] = StringVar()

        self.var.trace('w', self.changed)
        self.bind("<Right>", self.selection)
        self.bind("<Up>", self.moveUp)
        self.bind("<Down>", self.moveDown)
        
        self.listboxUp = False

    def changed(self, name, index, mode):
        if self.var.get() == '':
            if self.listboxUp:
                self.listbox.destroy()
                self.listboxUp = False
        else:
            words = self.comparison()
            if words:
                if not self.listboxUp:
                    self.listbox = Listbox(width=self["width"], height=self.listboxLength)
                    self.listbox.bind("<Button-1>", self.selection)
                    self.listbox.bind("<Right>", self.selection)
                    self.listbox.place(x=self.winfo_x(), y=self.winfo_y() + self.winfo_height())
                    self.listboxUp = True
                
                self.listbox.delete(0, END)
                for w in words:
                    self.listbox.insert(END,w)
            else:
                if self.listboxUp:
                    self.listbox.destroy()
                    self.listboxUp = False
        
    def selection(self, event):
        if self.listboxUp:
            self.var.set(self.listbox.get(ACTIVE))
            self.listbox.destroy()
            self.listboxUp = False
            self.icursor(END)

    def moveUp(self, event):
        if self.listboxUp:
            if self.listbox.curselection() == ():
                index = '0'
            else:
                index = self.listbox.curselection()[0]

            if index != '0':                
                self.listbox.selection_clear(first=index)
                index = str(int(index) - 1)

                self.listbox.see(index)
                self.listbox.selection_set(first=index)
                self.listbox.activate(index)

    def moveDown(self, event):
        if self.listboxUp:
            if self.listbox.curselection() == ():
                index = '0'
            else:
                index = self.listbox.curselection()[0]
                
            if index != END:                        
                self.listbox.selection_clear(first=index)
                index = str(int(index) + 1)
                
                self.listbox.see(index)
                self.listbox.selection_set(first=index)
                self.listbox.activate(index) 

    def comparison(self):
        return [ w for w in self.autocompleteList if self.matchesFunction(self.var.get(), w) ]

class Mmpos:
    def __init__(self, window):
        self.window = window
        self.time_0 = time.strftime('%H:%M%p')
        self.today = date.today()
        self.all_comboboxes = []
        self.global_total = 0.0
        self.window = window
        self.x = self.window.winfo_x()
        self.y = self.window.winfo_y()
        self.s_frame = Frame(self.window,width=800,height=660,bg="#9AF1F9")
        self.m_frame = Frame(self.window,width=900,height=450,bg="#9AF1F9")
        self.mframe = Frame(self.window,highlightbackground="black")
        self.image2 = ImageTk.PhotoImage(img)
        self.image1 = ImageTk.PhotoImage(img1)
        self.image3 = ImageTk.PhotoImage(img2)
        self.image4 = ImageTk.PhotoImage(img3)
        self.image5 = ImageTk.PhotoImage(img4)
        self.image6 = ImageTk.PhotoImage(img5)
        self.image7 = ImageTk.PhotoImage(img6)
        self.image8 = ImageTk.PhotoImage(img7)
        self.top = ImageTk.PhotoImage(img8)
        self.login_im = ImageTk.PhotoImage(img9)
        self.sign_im = ImageTk.PhotoImage(img10)
        self.user = ImageTk.PhotoImage(img11)
        self.update = ImageTk.PhotoImage(img12)
        self.m=StringVar()
        self.m1=StringVar()
        self.lisencevar= StringVar()
        self.log_in()
        self.style = ttk.Style()
        self.style.element_create("Custom.Treeheading.border", "from", "default")
        self.style.layout("Custom.Treeview.Heading", [
            ("Custom.Treeheading.cell", {'sticky': 'nswe'}),
            ("Custom.Treeheading.border", {'sticky':'nswe', 'children': [
                ("Custom.Treeheading.padding", {'sticky':'nswe', 'children': [
                    ("Custom.Treeheading.image", {'side':'right', 'sticky':''}),
                        ("Custom.Treeheading.text", {'sticky':'we'})
                    ]})
                ]}),
            ])
        self.style.configure("Custom.Treeview.Heading",background="blue", foreground="white", relief="flat")
       

    def coustmer_details(self,aframe=None):
        win = Toplevel(self.window)
        win.geometry("%dx%d%+d%+d" % (600, 600, 240, 80))
        win.grab_set()
        win.resizable(0, 0)
        win.transient(self.window)
        win.wm_title("Coustmer Details")
        self.main_frame = Frame(win,width=600,height=600,bg="#9AF1F9")
        self.main_frame.place(relx=0,rely=0)
        self.top_frame_1 = Frame(self.main_frame,width=600,height=60,bg="#09AFB7")
        self.coustmer_label = Label(self.top_frame_1,text="Coustmer Details",width=15,height=2,bg="#09AFB7",font='Helvetica 16 bold')
        self.coustmer_label.place(relx=0.32,rely=0.04)
        self.time = Label(self.top_frame_1, text=self.time_0,width = 7,height=1, fg="#000604", bg="#09AFB7", font=("helvetica", 12))
        self.time.place(relx=0.04,rely=0.3)
        self.d_label= Label(self.top_frame_1,text=str(self.today),width=12,height=1,font=('Arial 12 bold'), bg="#09AFB7")
        self.d_label.place(relx=0.69,rely=0.3)
        self.top_frame_1.place(relx=0,rely=0)
        self.name_label = Label(self.main_frame,text="Name :",width=10,height=2,bg="#09AFB7",font='Helvetica 14 bold')
        self.name_label.place(relx=0.02,rely=0.15)
        self.label_contact = Label(self.main_frame,text="Contact No .:",width=10,height=2,bg="#09AFB7",font='Helvetica 14 bold')
        self.label_contact.place(relx=0.02,rely=0.25)
        self.label_email = Label(self.main_frame,text="Email :",width=10,height=2,bg="#09AFB7",font='Helvetica 14 bold')
        self.label_email.place(relx=0.02,rely=0.35)
        self.label_add = Label(self.main_frame,text="Address 1 :",width=10,height=2,bg="#09AFB7",font='Helvetica 14 bold')
        self.label_add.place(relx=0.02,rely=0.45)
        self.label_add = Label(self.main_frame,text="Address 2 :",width=10,height=2,bg="#09AFB7",font='Helvetica 14 bold')
        self.label_add.place(relx=0.02,rely=0.55)
        self.entry_name = Text(self.main_frame,width=34,height=2,bg="#DCF8EE",font=("Helvetica", 18))
        self.entry_name.place(relx=0.25,rely=0.15)
        self.entry_contact = Text(self.main_frame,width=34,height=2,bg="#DCF8EE",font=("Helvetica", 18))
        self.entry_contact.place(relx=0.25,rely=0.25)
        self.entry_email = Text(self.main_frame,width=34,height=2,bg="#DCF8EE",font=("Helvetica", 18))
        self.entry_email.place(relx=0.25,rely=0.35)
        self.entry_addr = Text(self.main_frame,width=34,height=2,bg="#DCF8EE",font=("Helvetica", 18))
        self.entry_addr.place(relx=0.25,rely=0.45)
        self.entry_add = Text(self.main_frame,width=34,height=2,bg="#DCF8EE",font=("Helvetica", 18))
        self.entry_add.place(relx=0.25,rely=0.55)
        self.bottom_frame = Frame(self.main_frame,width=560,height=80,bg="#09AFB7")
        self.bottom_frame.place(relx=0.02,rely=0.7)
        def add_coustmer_details():
            if self.entry_name.get("1.0",END) == "\n" or self.entry_contact.get("1.0",END) == "\n" :
            	ms.showerror("Error","Please Fill Valid Details!",parent=win)
            	return
            else:
                with sqlite3.connect('restaurent_pos.db') as db:
                    c = db.cursor()

                    Coustmer_name = self.entry_name.get("1.0", END)
                    Contact_no = self.entry_contact.get("1.0", END)
                    E_mail_id = self.entry_email.get("1.0", END)
                    Address_1 = self.entry_addr.get("1.0", END)
                    Address_2 = self.entry_add.get("1.0", END)

                c.execute('INSERT INTO Coustmer_Details(Coustmer_name,Contact_no,E_mail_id,Address_1,Address_2) VALUES(?,?,?,?,?)',
                    (Coustmer_name,Contact_no,E_mail_id,Address_1,Address_2))
                db.commit()
                c.close()
                ms.showinfo("Success","Successfully Saved.")
                self.entry_name.delete("1.0", END)
                self.entry_contact.delete("1.0", END)
                self.entry_email.delete("1.0", END)
                self.entry_addr.delete("1.0", END)
                self.entry_add.delete("1.0", END)
                
        self.button_new = Button(self.bottom_frame,text="New",width=10,height=2,bg="#09AFB7",font='Helvetica 14 bold',command='self.clear_text_1')
        self.button_new.place(relx=0.08,rely=0.12)
        self.button_save = Button(self.bottom_frame,text="Save",width=10,height=2,bg="#09AFB7",font='Helvetica 14 bold',command=add_coustmer_details)
        self.button_save.place(relx=0.4,rely=0.12)
        self.button_save.bind("<Return>",add_coustmer_details)
            # self.button_7 = Button(self.bottom_frame,text="Close",width=10,height=2,bg="#09AFB7",font='Helvetica 14 bold',command=self.main_devision)
            # self.button_7.place(relx=0.72,rely=0.12)

    def only_numbers(self,char):
        return char.isdigit()

    def only_character(self,char):
        return char.isalpha()

    def mix(self,char):
        return char.isalnum()
    
    def licence(self):
            mac = getmac.get_mac_address()
            with sqlite3.connect("restaurent_pos.db") as db:
                cursor=db.cursor()
            cursor.execute("SELECT Store_name,lisence from Restaurent_Details")
            Store_name,licence = cursor.fetchone()
            payload={'mac':mac,'lisence':licence,'Shop_Name':Store_name}
            try:
                resp = requests.post("http://dpos.makemypos.com/lisence",payload,timeout=5)
                #print(resp.content.decode())
                dct = json.loads(resp.content.decode())
                #print(dct)
                dct['count'] = 0
                cursor.execute("SELECT * FROM Defaulte where Name='Backup'")
                det = cursor.fetchone()
                #print(det)
                print(dct['duration'])
                if det is None:
                    cursor.execute(f"INSERT INTO Defaulte(Name,Location,description) VALUES('Backup','{dct['duration']}','0')")
                else:
                    cursor.execute("UPDATE Defaulte SET Location='{}',description='0',date='{}' WHERE Name='Backup'".format(dct['duration'],datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")))
                db.commit()
            except Exception as msg:
                #print(str(msg))
                cursor.execute("SELECT * FROM Defaulte where Name='{}'".format("Backup"))
                det = cursor.fetchone()
                #print(det)
                if det:
                    cursor.execute("SELECT DATE(date) from Defaulte where Name='Backup'")
                    lsd, = cursor.fetchone()
                    lsd = datetime.datetime.strptime(lsd,"%Y-%m-%d").date()
                    now = datetime.date.today()
                    delta = now-lsd
                    d = int(det[2])
                    if delta.days >=0 and d > delta.days:
                        d = d-delta.days
                    else:
                        d = 0
                    if delta.days>30:
                        stat = 3
                    else:
                        stat=2
                    dct = {'success':stat,'duration':d,'count':delta.days}
                else:
                    dct = {'success':3,'duration':0,'count':0}
            return dct['success'],dct['duration'],dct['count']
        
    def A_1_kot(self,aframe=None):
        width = 800
        height = 600
        if aframe:
            mframe=aframe
        else:
            master=self.window
            frm_width = master.winfo_rootx() - master.winfo_x()
            win_width = width + 2 * frm_width
            titlebar_height = master.winfo_rooty() - master.winfo_y()
            win_height = height + titlebar_height + frm_width
            x = master.winfo_screenwidth() // 2 - win_width // 2
            y = master.winfo_screenheight() // 2 - win_height // 2-30
            master.geometry('{}x{}+{}+{}'.format(width, height, x, y))
            master.deiconify()
            self.main_frame = Frame(self.window,bg="#058B8B")
            self.main_frame.place(relx=0.15,rely=0.08)
        self.top_label = Label(self.main_frame,text="Always serve Better Taste ",width=78,height=2,bg="#C5F7F7",font='Helvetica 14 bold')
        self.top_label.place(relx=0.02,rely=0.01)
        self.mid_frame = Frame(self.main_frame,width=580,height=700)
        self.table_label = Label(self.mid_frame,text="Serve to Table A-1",width=78,height=1,bg="#C5F7F7",font='Helvetica 14 bold')
        self.table_label.place(relx=0.02,rely=0.01)
        self.element_header=['1st','2nd','3rd','4th']
        self.treeScroll = ttk.Scrollbar(self.mid_frame)
        self.treeScroll.pack(side='right', fill=Y)
        self.tree_1 = ttk.Treeview(self.mid_frame,columns=self.element_header,show = "headings", yscrollcommand =self.treeScroll)
        self.tree_1.heading("1st", text="Waiter_Name")
        self.tree_1.heading("2nd", text="Waiter_id")
        self.tree_1.heading("3rd", text="Item_name")
        self.tree_1.heading("4th", text="Item_Quantity")
        self.treeview_1 = self.tree_1
        self.i = 1
        self.tree_1.pack(side=BOTTOM,fill=BOTH,padx=52,pady=50)
        self.mid_frame.place(relx=0.02,rely=0.15)
        self.bottom_frame = Frame(self.main_frame,width=940,height=80,bg="#08A9A9")
        self.button_3 = Button(self.bottom_frame,text="Cook",width=6,height=1,bg="#35F7AD",font='Helvetica 12 bold',command='self.clear_text')
        self.button_3.place(relx=0.1,rely=0.18)
        self.button_4 = Button(self.bottom_frame,text="Save",width=6,height=1,bg="#35F7AD",font='Helvetica 12 bold',command='self.table_A1_data')
        self.button_4.place(relx=0.3,rely=0.18)
        self.button_5 = Button(self.bottom_frame,text="Close",width=6,height=1,bg="#35F7AD",font='Helvetica 12 bold',command=self.kitchen_screen)
        self.button_5.place(relx=0.5,rely=0.18)
        self.button_6 = Button(self.bottom_frame,text="Remove",width=6,height=1,bg="#35F7AD",font='Helvetica 12 bold',command="self.remove_button")
        self.button_6.place(relx=0.7,rely=0.19)
        self.bottom_frame.place(relx=0.02,rely=0.8)
       

    def click(self):
        for child in self.tree.get_children():
            self.tree_1.insert("",0,text=self.tree.item(child)["text"],values=self.tree.item(child)["values"])

    def kitchen_screen(self,aframe=None):
        width = 800
        height = 600
        if aframe:
            mframe=aframe
        else:
            master=self.window
            frm_width = master.winfo_rootx() - master.winfo_x()
            win_width = width + 2 * frm_width
            titlebar_height = master.winfo_rooty() - master.winfo_y()
            win_height = height + titlebar_height + frm_width
            x = master.winfo_screenwidth() // 2 - win_width // 2
            y = master.winfo_screenheight() // 2 - win_height // 2-30
            master.geometry('{}x{}+{}+{}'.format(width, height, x, y))
            master.deiconify()
            self.main_frame = Frame(self.window,bg="#058B8B")
            self.main_frame.pack(fill=BOTH,expand=Y)
        self.top_label = Label(self.main_frame,text="Kitchen (Always serve Better Taste) ",width=80,height=2,bg="#C5F7F7",font='Helvetica 14 bold')
        self.top_label.place(relx=0.02,rely=0)
        self.table_a1_order = Button(self.main_frame,text="Table A-1",width=10,height=2,bg="#1FF9F9",font='Helvetica 14 bold',command=self.A_1_kot)
        self.table_a1_order.place(relx=0.1,rely=0.12)
        self.table_a2_order = Button(self.main_frame,text="Table A-2",width=10,height=2,bg="#1FF9F9",font='Helvetica 14 bold',command='self.main_division')
        self.table_a2_order.place(relx=0.32,rely=0.12)
        self.table_a3_order = Button(self.main_frame,text="Table A-3",width=10,height=2,bg="#1FF9F9",font='Helvetica 14 bold',command='self.main_division')
        self.table_a3_order.place(relx=0.52,rely=0.12)
        self.table_a4_order = Button(self.main_frame,text="Table A-4",width=10,height=2,bg="#1FF9F9",font='Helvetica 14 bold',command='self.main_division')
        self.table_a4_order.place(relx=0.72,rely=0.12)
        self.table_a5_order = Button(self.main_frame,text="Table A-5",width=10,height=2,bg="#1FF9F9",font='Helvetica 14 bold',command='self.main_division')
        self.table_a5_order.place(relx=0.1,rely=0.32)
        self.take_out_order = Button(self.main_frame,text="Take Out Order",width=15,height=2,bg="#1FF9F9",font='Helvetica 14 bold',command='self.main_division')
        self.take_out_order.place(relx=0.32,rely=0.32)
        self.delivery_order = Button(self.main_frame,text="Delivery Order",width=15,height=2,bg="#1FF9F9",font='Helvetica 14 bold',command='self.main_division')
        self.delivery_order.place(relx=0.62,rely=0.32)
        self.bottom_frame = Frame(self.main_frame,width=940,height=80,bg="#08A9A9")
        self.button_3 = Button(self.bottom_frame,text="Cook",width=6,height=1,bg="#35F7AD",font='Helvetica 12 bold',command='self.clear_text')
        self.button_3.place(relx=0.1,rely=0.18)
        self.button_4 = Button(self.bottom_frame,text="Save",width=6,height=1,bg="#35F7AD",font='Helvetica 12 bold',command='self.table_A1_data')
        self.button_4.place(relx=0.3,rely=0.18)
        self.button_5 = Button(self.bottom_frame,text="Close",width=6,height=1,bg="#35F7AD",font='Helvetica 12 bold',command=self.main_devision)
        self.button_5.place(relx=0.5,rely=0.18)
        self.button_6 = Button(self.bottom_frame,text="Remove",width=6,height=1,bg="#35F7AD",font='Helvetica 12 bold',command="self.remove_button")
        self.button_6.place(relx=0.7,rely=0.19)
        self.bottom_frame.place(relx=0.02,rely=0.8)

    def btnclick(self,numbers):
    	global operator
    	self.operator=self.operator + str(numbers)
    	self.text_Input.set(self.operator)

    def clrdisplay(self):
    	global operator
    	self.operator=""
    	self.text_Input.set("")

    def eqals(self):
    	global operator
    	self.sumup=str(eval(self.operator))
    	self.text_Input.set(self.sumup)
    	self.operator = ""

    def insert_data(self):
        self.treeview.insert('', 'end', text=" "+str(self.i),
                             values=(self.cb_2.get() + " ",self.qty_entry.get(),self.price_entry.get()
                                      ))
        self.i = self.i + 1

    def clear_text(self):
    	self.id_entry.delete('0',END)
    	self.qty_entry.delete('0',END)
    	self.price_entry.delete('0',END)
#===================table-A1=================#
    
    def table_A1(self):
        self.salling()
        self.label_3.config(text="A-1")
        self.order_type_lbl.configure(text="Table A1 Order")

#=============================Table-2 = =======================#

    def table_A2(self):
        self.salling()
        self.label_4.config(text="A-2")
        self.order_type_lbl.configure(text="Table A2 Order")

#=============================Table-3 = =======================#
    def table_A3(self):
        self.salling()
        self.label_5.config(text="A-3")
        self.order_type_lbl.configure(text="Table A3 Order")
  
#============================table A4===================#
    def table_A4(self):
        self.salling()
        self.label_6.config(text="A-4")
        self.order_type_lbl.configure(text="Table A4 Order")

#=============table A-5 == ====================#

    def table_A5(self):
        self.salling()
        self.label_7.config(text="A-5")
        self.order_type_lbl.configure(text="Table A5 Order")

#===========================Dine===========================#
    def dine(self,aframe=None):
        self.salling()
        self.order_type_lbl.place_forget()
        self.order_type_lbl = Label(self.right_frame,width=20,text= "Dine In",font=('Arial 12 bold'))
        self.order_type_lbl .place(relx=0,rely=0.25)
        def tb_value():
            with sqlite3.connect('restaurent_pos.db') as db:
                c = db.cursor()
                query = c.execute('SELECT Table_no FROM Tables')
                data = list( )
                for column in c.fetchall():
                    data.append(column)
                    c.close()
                return data
        self.tb_cb = ttk.Combobox(self.right_frame,width=18)
        self.tb_cb.place(relx=0.33,rely=0.255)
        self.tb_cb.set("Select Table No.")
        self.tb_cb["values"] = tb_value()

    def clear_text_2(self):
        self.entry_26.delete(0, 'end')
        self.entry_27.delete(0, 'end')
        self.entry_28.delete(0, 'end')
    	
    def tip_data(self):
        if self.entry_26.get() == '' or self.entry_28.get() == '':
            ms.showerror("Error","Please Fill Valid Details!",parent=self.top_frame_2)
            return
        else:
        	self.treeview.insert('', 'end', text=" "+str(self.i),
        		values=(self.entry_26.get() + " ",self.entry_27.get(),self.entry_28.get()))
        	self.i = self.i + 1
        	self.tip_collection_entry()
        	self.clear_text_2()

    def tip_collection_entry(self):
        if self.entry_26.get()==''or self.entry_28 =='':
            ms.showerror("Error","Please Enter Valid Details!")
            return
        else:
            with sqlite3.connect('restaurent_pos.db') as db:
                c = db.cursor()

                Waiter_Name = self.entry_26.get()
                Waiter_id = self.entry_27.get()
                Tip_Amount = self.entry_28.get()
                Date = self.date.cget("text")
                time = self.time_1.cget("text")

            c.execute('INSERT INTO Tip_Collection(Waiter_name,Waiter_id,Tip_Amount,Date_,Time) VALUES(?,?,?,?,?)',
                (Waiter_Name,Waiter_id,Tip_Amount,Date,time))
            db.commit()
            c.close()
            ms.showinfo("Success","Successfully Saved")

    def cb_10_item_input(self):
        with sqlite3.connect('restaurent_pos.db') as db:
            c = db.cursor()
            query = c.execute('SELECT Date_ FROM Tip_Collection')
            data = [ ]
            for row in c.fetchall():
                data.append(row[0])
                c.close()
            return data 

    def get_tip_report(self):
        win = Toplevel(self.window)
        win.geometry("%dx%d%+d%+d" % (600, 500, 240, 80))
        win.grab_set()
        win.resizable(0, 0)
        win.transient(self.window)
        win.wm_title("Tip Report")
        self.main_frame = Frame(win,width=600,height=500)
        self.main_frame.place(relx=0,rely=0)
        self.hadder = Frame(self.main_frame,bg="#74E6F9",width=600,height=50)
        self.top1 = Label(self.hadder,text="Select Date for Tip Collection Report :",width=50,height=3,
            font=('Arial 12 bold'),bg="#74E6F9")
        self.top1.place(relx=0,rely=0)
        self.hadder.place(relx=0,rely=0)
        self.hadder2 = Frame(self.main_frame,bg="#74E6F9",width=600,height=70)
        self.hadder2.place(relx=0,rely=0.12)
        self.hadder3 = Frame(self.main_frame,width=600,height=300)
        self.hadder3.place(relx=0,rely=0.26)
        self.date_label = Label(self.hadder2,text="Select Date :",bg="#74E6F9",width=12,height=2,font=('Arial 12 bold'))
        self.date_label.place(relx=0.13,rely=0.15)
        self.date_combo = ttk.Combobox(self.hadder2,width=20)
        self.date_combo.place(relx=0.35,rely=0.24)
        #self.date_combo.set("Select Date")
        self.date_combo["values"] = self.cb_10_item_input()
        def search_tip(*args,**kwargs):
        	if self.date_combo.get()=='':
        		ms.showerror("Error","Select Date First.",parent=win)
        		return
        	else:
        		self.date_combo.place_forget()
        		self.cnfm_bttn.place_forget()
        		self.date_label.place_forget()
        		with sqlite3.connect('restaurent_pos.db') as db:
        			c = db.cursor()
        		c.execute("SELECT * FROM Tip_Collection WHERE Date_ = ?",(self.date_combo.get() ,))
        		columns = c.fetchall()
        		headings = ('S.no.','Waiter_Name', 'Waiter_id','Tip_Amount','Date','Time')
        		self.view_(self.hadder3,headings,columns)
        self.date_combo.bind("<Return>",search_tip)
        self.cnfm_bttn = Button(self.hadder2,text="Confirm",width=12,font=('Arial 11 bold'),command=search_tip)
        self.cnfm_bttn.place(relx=0.68,rely=0.14)
        # self.cnfm_bttn = Button(self.main_frame,text="Search",width=12,height=2,font=('Arial 10 bold'),bg="#3EDCFA",command=self.search_tip)
        # self.cnfm_bttn.place(relx=0.58,rely=0.15)
        # self.tree = ttk.Treeview(self.main_frame,
        #     columns=('Date','Time','Waiter Name', 'Waiter id','Tip Amount','Time'))
        # self.tree.heading('#0', text='S.no.')
        # self.tree.heading('#1', text='Tip No.')
        # self.tree.heading('#2', text='Waiter Name')
        # self.tree.heading('#3', text='Waiter id')
        # self.tree.heading('#4', text='Tip Amount')
        # self.tree.heading('#5', text='Date')
        # self.tree.heading('#6', text='Time')
        # self.tree.column('#0',minwidth=0,width=5, stretch=YES)
        # self.tree.column('#1',minwidth=0,width=80, stretch=YES)
        # self.tree.column('#2',minwidth=0,width=140, stretch=YES)
        # self.tree.column('#3',minwidth=0,width=140, stretch=YES)
        # self.tree.column('#4',minwidth=0,width=120, stretch=YES)
        # self.tree.column('#5',minwidth=0,width=120, stretch=YES)
        # self.tree.column('#6',minwidth=0,width=120, stretch=YES)
        # self.tree.place(relx=0.04,rely=0.28)
        # self.treeview = self.tree
        # self.i = 1

        # self.cls_bttn = Button(self.main_frame,text="Close",bg="#3EDCFA",width=15,height=2,font=('arial 10 bold'),command=self.close_2)
        # self.cls_bttn.place(relx=0.45,rely=0.76)
        
    def tip_collection(self):
        win = Toplevel(self.window)
        win.geometry("%dx%d%+d%+d" % (650, 550, 240, 80))
        win.grab_set()
        win.transient(self.window)
        win.resizable(0, 0)
        win.wm_title("Tip Collection")
        self.main_frame = Frame(win,width=650,height=550,bg="#90EAFC")
        self.top_frame_1 = Frame(self.main_frame,width=650,height=60,bg="#08B1B9")
        self.label_1 = Label(self.top_frame_1,text="Tip Collection",width=15,height=2,bg="#08B1B9",font='Helvetica 16 bold')
        self.label_1.place(relx=0.32,rely=0.04)
        self.date = Label(self.top_frame_1,text=self.today, width = 12,height=1, fg="#000604", bg="#08B1B9", font=("helvetica", 12))
        self.date.place(relx=0.04,rely=0.3)
        self.time_1 = Label(self.top_frame_1,text= self.time_0 ,width = 15,height=1, fg="#000604", bg="#08B1B9", font=("helvetica", 12))
        self.time_1.place(relx=0.69,rely=0.3)
        self.top_frame_1.place(relx=0,rely=0)
        self.top_frame_2 = Frame(self.main_frame,width=650,height=380)
        self.label_2 = Label(self.top_frame_2,text="Waiter Name :",width=16,bg="#A2F9FD", font=("helvetica", 10,"bold"))
        self.label_2.place(relx=0.01,rely=0.03)
        self.entry_26 = ttk.Combobox(self.top_frame_2,width=20)
        self.entry_26.place(relx=0.23,rely=0.03)
        self.label_3 = Label(self.top_frame_2,text="Waiter id :",width=16,bg="#A2F9FD", font=("helvetica", 10,"bold"))
        self.label_3.place(relx=0.01,rely=0.15)
        self.entry_27 = ttk.Combobox(self.top_frame_2,width=20)
        self.entry_27.place(relx=0.23,rely=0.15)
        self.label_4 = Label(self.top_frame_2,text="Tip Amount :",width=16,bg="#A2F9FD", font=("helvetica", 10,"bold"))
        self.label_4.place(relx=0.52,rely=0.03)
        validation = window.register(self.only_numbers)
        self.entry_28 =Entry(self.top_frame_2,width=20,bd=2, validate="key", validatecommand=(validation, '%S'))
        self.entry_28.place(relx=0.75,rely=0.03)
        self.total_label = Label(self.top_frame_2, text=' ',width=18,height=1)
        self.total_label.place(relx=0.59,rely=0.68)
        self.conform_button = Button(self.top_frame_2,width=20,height=2,text="Confirm",bg="#30D8F9",command= self.tip_data,font=('Arial 10 bold'))
        self.conform_button.place(relx=0.64,rely=0.13)
        self.top_frame_2.place(relx=0,rely=0.12)
        self.tree1 = ttk.Treeview(self.top_frame_2,
            columns=('Waiter Name', 'Waiter id','Tip Amount'), style="Custom.Treeview")
        self.tree1.heading('#0', text='S.no.')
        self.tree1.heading('#1', text='Waiter Name')
        self.tree1.heading('#2', text='Waiter id')
        self.tree1.heading('#3', text='Tip Amount')
        self.tree1.column('#1',minwidth=0,width=120, stretch=YES)
        self.tree1.column('#2',minwidth=0,width=170, stretch=YES)
        self.tree1.column('#0',minwidth=0,width=170, stretch=YES)
        self.tree1.column('#3',minwidth=0,width=170, stretch=YES)
        self.tree1.place(relx=0.01,rely=0.28)
        self.treeview = self.tree1
        self.i = 1
        self.bottom_frame = Frame(self.main_frame,width=560,height=80,bg="#90EAFC")
        self.button_1 = Button(self.bottom_frame,text="New",width=10,height=2,bg="#30D8F9",font='Helvetica 14 bold',command= self.clear_text_2 )
        self.button_1.place(relx=0.08,rely=0.12)
        self.button_2 = Button(self.bottom_frame,text="Save",width=10,height=2,bg="#30D8F9",font='Helvetica 14 bold',comman= self.tip_collection_entry)
        self.button_2.place(relx=0.35,rely=0.12)
        self.button_4 = Button(self.bottom_frame,text="Close",width=10,height=2,bg="#30D8F9",font='Helvetica 14 bold',command=self.main_devision)
        self.button_4.place(relx=0.65,rely=0.12)
        self.bottom_frame.place(relx=0.04,rely=0.82)
        self.main_frame.place(relx=0,rely=0)
    	

    def take_out_order(self):
        self.salling()
        self.order_type_lbl.configure(text="Take out order")

#==========insert in reports==========#
   
    def get_item(self,*args,**kwargs):
        with sqlite3.connect('restaurent_pos.db') as db:
            c = db.cursor()

            c.execute("SELECT * FROM Kitchen_store WHERE Item_name = ?",(self.cb_5.get() ,))
            rows = c.fetchone()
            for r in rows:
                self.n5 = rows[3]
                self.n7 = rows[4]
                self.n6 = rows[5]
            
            self.u_item.configure(text="Item Name : " + str(self.n5))
            self.irate.configure(text= "Rate : Rs.  "+ str(self.n6))

            self.qty_label = Label(self.right_frame,text=" Enter Quantity",width=12,height=2,font=('Arial 12 bold'))
            self.qty_label.place(relx=0.02,rely=0.4)
            self.qty_entry = Entry(self.right_frame,width=23)
            self.qty_entry.place(relx=0.32,rely=0.42)

            self.givn_ammount = Label(self.right_frame,text="Given Amount",width=10,height=2,font=('Arial 12 bold'))
            self.givn_ammount.place(relx=0.04,rely=0.53)

            self.amt_entry = Entry(self.right_frame,width=23)
            self.amt_entry.place(relx=0.32,rely=0.55)

            self.cal_bttn = Button(self.right_frame,text="Calculate",width=12,height=2,command=self.change)
            self.cal_bttn.place(relx=0.7,rely=0.55)

            self.conform_bttn = Button(self.right_frame,text="Confirm",width=12,height=2,command=self.add_to_bill)
            self.conform_bttn.place(relx=0.7,rely=0.41)

    def add_to_bill(self, *args, **kwargs):
        self.quantity_value = int(self.qty_entry.get())
        if self.quantity_value > int(self.n7):
            ms.showerror("Error","Item Quantity is not available on stock!")

        else:
            self.final_price = float(self.quantity_value) * float(self.n6)
            item_name_list.append(self.n5)
            item_price_list.append(self.final_price)
            item_quantity_list.append(self.quantity_value)

            self.x_index = 0
            self.y_index = 100
            self.counter = 0

            for self.p in item_name_list:
                self.tempname = Label(self.left_frame,text= str(item_name_list[self.counter]),font=('Arial 12 bold'),bg="lightblue")
                self.tempname.place(x=50,y=self.y_index)
                label_list.append(self.tempname)

                self.tempqty = Label(self.left_frame,text= str(item_quantity_list[self.counter]),font=('Arial 12 bold'),bg="lightblue")
                self.tempqty.place(x=200,y=self.y_index)
                label_list.append(self.tempqty)

                self.temprice = Label(self.left_frame,text= str(item_price_list[self.counter]),font=('Arial 12 bold'),bg="lightblue")
                self.temprice.place(x=350,y=self.y_index)
                label_list.append(self.temprice)

                self.y_index += 40
                self.counter += 1

                self.total.configure(text="Total Rs : " + str(sum(item_price_list)))

                self.qty_label.place_forget()
                self.qty_entry.place_forget()
                #self.givn_ammount.place_forget()
                self.amt_entry.delete('0',END)
                self.conform_bttn.place_forget()
                self.amt_entry.delete('0' , END)
                self.cb_5.delete('0' , END)
                #self.cal_bttn.place_forget()

    def change(self,*args,**kwargs):
        self.amount_given = float(self.amt_entry.get())
        self.our_total = float(sum(item_price_list))
        self.to_give = self.amount_given - self.our_total
        self.change_label = Label(self.left_frame,text="Change Rs. "+ str(self.to_give),font=('Arial 14 bold'),bg='lightblue')
        self.change_label.place(relx=0.6,rely=0.73)
        

    def clear_text_10(self):
        self.entry_name.delete('1.0', END)
        self.entry_number.delete('1.0', END)
        self.entry_alternate_no.delete('1.0', END)
        self.entry_email.delete('1.0', END)
        self.entry_address.delete('1.0', END)

    def delivery_address_data(self):
        with sqlite3.connect('restaurent_pos.db') as db:
            c = db.cursor()

            coustmer_name = self.name_ent.get()
            Contact_no = self.alt_ent.get()
            Alternate_no = self.alt_ent.get()
            E_mail = self.add_ent.get()
            Address = self.add_ent.get()

            c.execute('INSERT INTO Delivery_address(Coustmer_name,Contect_no,Alternate_no,E_mail,Address) VALUES(?,?,?,?,?)',
                (coustmer_name,Contact_no,Alternate_no,E_mail,Address))
            db.commit()
            c.close()

    def conform_button_d(self):
        self.delivery_address_data()
        self.clear_text_10()


    def clear_text_9(self):
    	self.name_entry.delete('0',END)
    	self.id_entry.delete('0',END)
    	self.item_entry.delete('0',END)
    	self.qty_entry.delete('0',END)
    	self.price_entry.delete('0',END)

    def on_click_6(self):
        self.delivery_order_data()
        self.insert_data()
        self.clear_text_9()

    def delivery_order(self,*args):
        c.execute("SELECT * FROM Restaurent_Details")
        rows = c.fetchall()
        for y in rows:
            self.k1 = y[1]
            self.k2 = y[2]
            self.k3 = y[3]
            self.k4 = y[4]
            self.k5 = y[5]
            self.k6 = y[6]
            self.k7 = y[7]
            self.k8 = y[8]
            self.k9 = y[9]
            self.k10 = y[10]
        win = Toplevel(self.window)
        win.geometry("%dx%d%+d%+d" % (1200, 600, 70, 50))
        win.grab_set()
        win.resizable(0, 0)
        win.transient(self.window)
        win.wm_title("Delivery Order")
        self.main_frame = Frame(win,width=1250,height=600,bg="#9AF1F9")
        self.main_frame.place(relx=0,rely=0)

        self.right_frame = Frame(self.main_frame,width=450,height=600)
        self.hadder = Frame(self.right_frame,width=450,height=100,bg="#05B5C4")
        self.top_label_1 = Label(self.hadder,text= str(self.k1),width=20,font=('Arial 14 bold'),bg="#05B5C4")
        self.top_label_1.place(relx=0.2,rely=0.01)
        self.top_label_2 = Label(self.hadder,text= str(self.k2)+","+str(self.k4),width=30,font=('Arial 10 bold'),bg="#05B5C4")
        self.top_label_2.place(relx=0.2,rely=0.28)
        self.top_label_3 = Label(self.hadder,text= str(self.k5)+","+str(self.k6)+","+str(self.k8)+","+str(self.k9),width=30,height=2,font=('Arial 10 bold'),bg="#05B5C4")
        self.top_label_3.place(relx=0.2,rely=0.48)
        self.d_label= Label(self.hadder,text=str(self.today),width=10,height=1,font=('Arial 12 bold'),bg="#05B5C4")
        self.d_label.place(relx=0.74,rely=0.01)
        self.t_label= Label(self.hadder,text=str(self.time_0),width=12,height=1,font=('Arial 12 bold'),bg="#05B5C4")
        self.t_label.place(relx=0,rely=0.01)
        self.hadder.place(relx=0,rely=0)
        # self.date_label= Label(self.right_frame,text="Today's Date  : " + str(self.today),width=25,height=1,font=('Arial 12 bold'),bg="lightblue")
        # self.date_label.place(relx=0,rely=0.1)
        self.top_frame = Frame(self.right_frame,width=450,bg="lightblue",height=60)
        self.item_label = Label(self.top_frame,text= "Item Name ",width=15,height=2,font=('Arial 12 bold'),bg="lightblue")
        self.item_label.place(relx=0.02,rely=0.18)
        
        self.cb_5 = ttk.Combobox(self.top_frame,width=20)
        self.cb_5.place(relx=0.32,rely=0.3)
        self.cb_5.set("Select Item")
        self.cb_5['values'] = self.cb_6_item_input() 

        self.conform_bttn = Button(self.top_frame,text="Search",font=('arial 11 bold'),width=12,height=2,command=self.get_item)
        self.conform_bttn.place(relx=0.68,rely=0.18)
        self.top_frame.place(relx=0,rely=0.15)

        self.order_type_lbl_2 = Label(self.right_frame,width=20,text= "Delivery Order",font=('Arial 12 bold'))
        self.order_type_lbl_2 .place(relx=0.22,rely=0.25)
   
        self.u_item = Label(self.right_frame,width=20,text= "",font=('Arial 12 bold'))
        self.u_item.place(relx=0.05,rely=0.33)

        self.irate = Label(self.right_frame,width=20,text= "",font=('Arial 12 bold'))
        self.irate.place(relx=0.05,rely=0.39)

        self.right_frame.place(relx=0,rely=0)

        self.left_frame = Frame(self.main_frame,width=450,height=600,bg="lightblue")
        # self.date_label= Label(self.left_frame,text="Today's Date  : " + str(self.today),width=25,height=1,font=('Arial 12 bold'),bg="lightblue")
        # self.date_label.place(relx=0,rely=0)
        self.item_label = Label(self.left_frame,text="Item Name",width=15,font=('Arial 14 bold'),bg="lightblue")
        self.item_label.place(relx=0.01,rely=0.06)
        self.qty_label = Label(self.left_frame,text="Quantity",width=15,font=('Arial 14 bold'),bg="lightblue")
        self.qty_label.place(relx=0.34,rely=0.06)

        self.total = Label(self.left_frame,width=15,height=2,text= "",font=('Arial 14 bold'),bg="lightblue")
        self.total.place(relx=0,rely=0.72)

        self.amount_label = Label(self.left_frame,text="Amount",width=15,font=('Arial 14 bold'),bg="lightblue")
        self.amount_label.place(relx=0.63,rely=0.06) 
        self.left_frame.place(relx=0.36,rely=0)

        self.left_frame_2 = Frame(self.main_frame,width=350,height=400,bg="lightblue")
        self.hadder = Frame(self.left_frame_2,width=350,height=50,bg="#05B5C4")
        self.odr_label = Label(self.hadder,text="Delivery Address",width=30,font=('Arial 14 bold'),bg="#05B5C4")
        self.odr_label.place(relx=0,rely=0.04)
        self.hadder.place(relx=0,rely=0)
        reg1 = window.register(self.InputVal1)
        self.name = Label(self.left_frame_2,width=15,height=2,text= "Name :",font=('Arial 12 bold'),bg="lightblue")
        self.name.place(relx=0,rely=0.15)
        self.name_ent = Entry(self.left_frame_2,width=25,validate='key',vcmd=(reg1,'%S'))
        self.name_ent.place(relx=0.39,rely=0.18)
        reg2 = window.register(self.only_numbers)
        self.phone = Label(self.left_frame_2,width=15,height=2,text= "Contact. no :",font=('Arial 12 bold'),bg="lightblue")
        self.phone.place(relx=0,rely=0.27)
        phonesv=StringVar()
        phonesv1=StringVar()
        self.no_ent = Entry(self.left_frame_2,width=25,textvariable=phonesv)
        self.no_ent.place(relx=0.39,rely=0.3)
        phonesv.trace("w", lambda name, index, mode, sv=phonesv: self.mcallback(sv))
        self.alt_lbl = Label(self.left_frame_2,width=15,height=2,text= "Alternate no :",font=('Arial 12 bold'),bg="lightblue")
        self.alt_lbl.place(relx=0,rely=0.37)
        self.alt_ent = Entry(self.left_frame_2,width=25,textvariable=phonesv1)
        self.alt_ent.place(relx=0.39,rely=0.4)
        phonesv1.trace("w", lambda name, index, mode, sv=phonesv1: self.mcallback(sv))
        self.address = Label(self.left_frame_2,width=15,height=2,text= "Address :",font=('Arial 12 bold'),bg="lightblue")
        self.address.place(relx=0,rely=0.46)
        self.add_ent = Entry(self.left_frame_2,width=25)
        self.add_ent.place(relx=0.39,rely=0.5)

        self.sbmt_bttn = Button(self.left_frame_2,text="Submit",width=15,height=2,font=('Arial 12 bold'),command=self.delivery_address_data)
        self.sbmt_bttn.place(relx=0.33,rely=0.65)

        self.left_frame_2.place(relx=0.723,rely=0.2)
        self.bottom_frame = Frame(self.main_frame,width=450,bg="lightblue",height=80)
        # self.close_bttn_1 = Button(self.bottom_frame,text="Close",width=44,height=2,command=self.main_devision,font=('Arial 12 bold'))
        # self.close_bttn_1.place(relx=0,rely=0.12)
        self.no_ent.bind("<Return>",self.generate_bill_2)
        self.bill_bttn = Button(self.main_frame,text="Generate Bill",width=44,height=2,command=self.generate_bill_2,bg="red",font=('Arial 12 bold'))
        self.bill_bttn.place(relx=0,rely=0.7)
        self.bottom_frame.place(relx=0,rely=0.78)
   
    def generate_bill_2(self, *args, **kwargs):
        if self.name_ent.get()=='' or self.no_ent.get()==''or self.add_ent.get()=='':
            ms.showerror("Error","Something went wrong. ",parent=self.hadder)
            return
        else:
            c.execute("SELECT * FROM Restaurent_Details")
            rows = c.fetchall()
            for y in rows:
                self.k1 = y[1]
                self.k2 = y[2]
                self.k3 = y[3]
                self.k4 = y[4]
                self.k5 = y[5]
                self.k6 = y[6]
                self.k7 = y[7]
                self.k8 = y[8]
                self.k9 = y[9]
                self.k10 = y[10]

            company = str(self.k1)
            phone =  "+91"+ str(self.k2)
            email =  str(self.k4) + "," + str(self.k5)  
            address = str(self.k6) + ","+ str(self.k9)
            dt = str(self.today) + " " + str(self.time_0)
            order = str(self.order_type_lbl_2.cget("text"))

            printdata = []
            for line in (company,phone,email,address,dt,order,"----------------------","S.no  Item  Qty  ₹₹","----------------------"):
                printdata.append(line)
            i = 0
            for r,item_name in enumerate(item_name_list,1):
                printdata.append(str(r) + " " + str(item_name_list[i])[:5]  +" "+str(item_quantity_list[i]) +" "+str(item_price_list[i]) )
            i += 1
            printdata.append("\tTotal Rs." + str(sum(item_price_list)))
            printdata.append("--------Thank You--------")

            order_address = str(self.odr_label.cget("text"))
            name = str(self.name_ent.get())
            contact = str(self.no_ent.get()) + "," + str(self.alt_ent.get())
            address = str(self.add_ent.get())

            for details in (order_address,name,contact,address):
                printdata.append(details)
            printjob('POS-58-Series',printdata)

#=================Update Database====================#
            self.x = 0 

            initial ="SELECT * FROM Kitchen_store WHERE Item_name = ?"
            result = c.execute(initial,(item_name_list[self.x], ))

            for i in item_quantity_list:
                for rt in result:
                    self.old_stock = rt[4]
                self.new_stock =   int(self.old_stock) - int(item_quantity_list[self.x])
                c.execute("UPDATE Kitchen_store SET Quantity=? WHERE Item_name=? ",
                    (self.new_stock,item_name_list[self.x]))
                db.commit()

                self.d1 =self.d_label.cget("text")
                self.t1 = self.t_label.cget("text")
                self.t2 = self.order_type_lbl_2.cget("text")

                sql = 'INSERT INTO Reports (Item_name,Quantity,Amount,Date,Time,Order_type) VALUES(?,?,?,?,?,?) '
                c.execute(sql,(item_name_list[self.x], item_quantity_list[self.x], item_price_list[self.x],self.d1,self.t1,self.t2))
                db.commit()

                self.x += 1

            for a in label_list:
                a.destroy()

            del(item_name_list[:])
            del(item_quantity_list[:])
            del(item_price_list[:])

            self.total.configure(text="")
            self.amt_entry.configure(text="")
            self.change_label.configure(text="")

            ms.showinfo("Success","Bill Generated Successfully ")

    def delivery_button_cmd(self):
        self.delivery_order()

    def window_close(self):
        window.destroy()


    def insert_cooked(self):
        if self.made_item_entry.get() ==''or self.made_qty_entry.get() =='' or self.itm_rate_entry.get() =='':
            return
        else:
            self.treeview.insert('', 'end', text=""+str(self.i),
                values=(self.cal_8.get(),self.time_label.cget("text"),self.made_item_entry.get(),self.made_qty_entry.get(),self.itm_rate_entry.get(),self.make_chef_entry.get()))
            self.i = self.i + 1

    def item_db(self):
        with sqlite3.connect('restaurent_pos.db') as db:
            c = db.cursor()
            self.date_dt = self.cal_8.cget("text")
            self.time_t = self.time_label.cget("text")
            self.item_name_i = self.made_item_entry.get()
            self.quantity_q = self.made_qty_entry.get()
            self.item_rate_r = self.itm_rate_entry.get()
            self.chef_name_c = self.make_chef_entry.get()

            if self.item_name_i == '' or self.quantity_q == '' or self.item_rate_r == '' :
            	ms.showerror("Error!","Please Enter valid details.",parent=self.a_frame)
            	return

            else:
                c.execute('INSERT INTO Kitchen_store(Date_,Time_,Item_name,Quantity,Rate,Chef) VALUES(?,?,?,?,?,?)',
                    (self.date_dt,self.time_t,self.item_name_i,self.quantity_q,self.item_rate_r,self.chef_name_c))
            
                ms.showinfo("Success","Successfully added to Stock")
            db.commit()
            c.close()


    def delete_entry(self):
        c.execute("DELETE FROM Kitchen_store WHERE id = (SELECT MAX(id) FROM Kitchen_store)")
        db.commit()
        c.close()

    def remove_item(self):
        selected_items = self.treeview.selection()
        for selected_item in selected_items:
            self.treeview.delete(selected_item)

    def remove_bttn(self):
        self.delete_entry()
        self.remove_item()
    
    def add_items_confrm_bttn(self):
        self.item_db()
        if self.made_item_entry.get() ==''or self.made_qty_entry.get() =='' or self.itm_rate_entry.get() =='':
        	return
        else:
            self.treeview.insert('', 'end', text=""+str(self.i),
                values=(self.cal_8.cget("text"),self.time_label.cget("text"),self.made_item_entry.get(),self.made_qty_entry.get(),self.itm_rate_entry.get(),self.make_chef_entry.get()))
            self.i = self.i + 1

        self.made_item_entry.delete('0',END)
        self.made_qty_entry.delete('0',END)
        self.itm_rate_entry.delete('0',END)
        self.make_chef_entry.delete('0',END)    
    

    def add_items(self):
        win = Toplevel(self.window)
        win.geometry("%dx%d%+d%+d" % (700, 600, 150, 80))
        win.grab_set()
        win.resizable(0, 0)
        win.transient(self.window)
        win.wm_title("Add Item's")
        self.a_frame = Frame(win,width=700,height=600,bg="#9AF1F9")
        self.a_frame.place(relx=0,rely=0)

        self.top_label = Label(self.a_frame,text="Add Cooked Item Details",height=2,bg="#85E6F6",width=60,font=('Arial 14 bold'))
        self.top_label.place(relx=0,rely=0)
        # self.date_label = Label(self.a_frame,text="Date :",bg="#9AF1F9",width=15,font=('arial 11 bold'))
        # self.date_label.place(relx=0.01,rely=0.02)
        self.cal_8 = Label(self.a_frame,text=str(self.today),width=10,height=1,font=('Arial 12 bold'),bg="#85E6F6")
        self.cal_8.place(relx=0.01,rely=0.04)
        
        self.item_name_label = Label(self.a_frame,bg="#9AF1F9",text="Item Name :",width=15,font=('Arial 11 bold'))
        self.item_name_label.place(relx=0.01,rely=0.11)
        
        validation = window.register(self.mix)
        self.made_item_entry = Entry(self.a_frame,width=24,bd=2,validate="key", validatecommand=(validation, '%S'))
        self.made_item_entry.place(relx=0.24,rely=0.11)

        self.item_qty_label = Label(self.a_frame,bg="#9AF1F9",text="Quantity :",width=15,font=('Arial 11 bold'))
        self.item_qty_label.place(relx=0.01,rely=0.17)

        validation = window.register(self.only_numbers)
        self.made_qty_entry = Entry(self.a_frame,width=24 ,bd=2,validate="key", validatecommand=(validation, '%S'))
        self.made_qty_entry.place(relx=0.24,rely=0.17)

        self.rate_label = Label(self.a_frame,bg="#9AF1F9",text="Per Item Rate :",width=15,font=('Arial 11 bold'))
        self.rate_label.place(relx=0.5,rely=0.11)

        self.itm_rate_entry = Entry(self.a_frame,width=27,bd=2, validate="key", validatecommand=(validation, '%S'))
        self.itm_rate_entry.place(relx=0.72,rely=0.11)

        self.chef_name_label = Label(self.a_frame,bg="#9AF1F9",text="Cooked By :",width=15,font=('Arial 11 bold'))
        self.chef_name_label.place(relx=0.01,rely=0.24)
        validation = window.register(self.only_character)
        self.make_chef_entry = Entry(self.a_frame,width=24,bd=2,validate="key", validatecommand=(validation, '%S'))
        self.make_chef_entry.place(relx=0.24,rely=0.24)
        self.time_label = Label(self.a_frame,bg="#85E6F6",text=""+str(self.time_0),width=15,font=('Arial 11 bold'))
        self.time_label.place(relx=0.72,rely=0.04)
        self.itm_rate_entry.bind("<Return>",self.add_items_confrm_bttn)
        self.conform_bttn = Button(self.a_frame,text="Add to Stock",width=23,height=2,command=self.add_items_confrm_bttn,font=('Arial 12 bold'),bg="red")
        self.conform_bttn.place(relx=0.58,rely=0.22)
        self.mid_frame = Frame(self.a_frame,width=700,height=280)
        self.tree = ttk.Treeview(self.mid_frame,
            columns=('Date','Time','Item Name', 'Quantity','Per item Rate','Cooked By'), style="Custom.Treeview")
        self.tree.heading('#0', text='S.no.')
        self.tree.heading('#1', text='Date')
        self.tree.heading('#2', text='Time')
        self.tree.heading('#3', text='Item Name')
        self.tree.heading('#4', text='Quantity')
        self.tree.heading('#5', text='Per item Rate')
        self.tree.heading('#6', text='Cooked By')
        self.tree.column('#0',minwidth=0,width=50, stretch=YES)
        self.tree.column('#1',minwidth=0,width=100, stretch=YES)
        self.tree.column('#2',minwidth=0,width=100, stretch=YES)
        self.tree.column('#3',minwidth=0,width=120, stretch=YES)
        self.tree.column('#4',minwidth=0,width=100, stretch=YES)
        self.tree.column('#5',minwidth=0,width=100, stretch=YES)
        self.tree.column('#6',minwidth=0,width=100, stretch=YES)
        self.tree.place(relx=0.02,rely=0.02)
        self.treeview = self.tree
        self.i = 1
        self.mid_frame.place(relx=0,rely=0.37)
        self.bottom_frame = Frame(self.a_frame,width=700,height=80,bg="#76F1FB")
        # self.button_6 = Button(self.bottom_frame,text="Remove Item",width=15,height=2,font='Helvetica 12 bold',command=self.remove_bttn)
        # self.button_6.place(relx=0.34,rely=0.19)
        self.bottom_frame.place(relx=0.01,rely=0.84)
        # self.cal_8 = DateEntry(self.a_frame, width=20, background='darkblue',foreground='white', borderwidth=2)
        # self.cal_8.place(relx=0.24, rely=0.1)
        # self.clear_bttn = Button(self.top_frame,text="Clear",width=15,height=2,command=self.clear_item_text)
        # self.clear_bttn.place(relx=0.25,rely=0.54)
        # self.button_4 = Button(self.bottom_frame,text="Save",width=6,height=1,bg="#35F7AD",font='Helvetica 12 bold',command=self.delivery_order_data)
        # self.button_4.place(relx=0.3,rely=0.18)
        # self.button_5 = Button(self.bottom_frame,text="Close",width=15,height=2,font='Helvetica 12 bold',command=self.close_button_9)
        # self.button_5.place(relx=0.5,rely=0.19)
        #self.main_frame.place(relx=0.15,rely=0.04)

    def employee_db(self,*args):
    	if self.name_entry.get() == '' or self.id_entry.get() == '' or self.no_entry.get() == '' or self.dsg_combo.get() == '' or self.email_entry.get() == '' :
    		ms.showerror("Error","Please fill all details!",parent=self.main_frame)
    		return
    	else:
    		with sqlite3.connect('restaurent_pos.db')as db:
    			c = db.cursor()

    		self.name = self.name_entry.get()
    		self.emp_id = self.id_entry.get()
    		self.contact = self.no_entry.get()
    		self.designation = self.dsg_combo.get()
    		self.alternate_no = self.alternate_no_ent.get()
    		self.email = self.email_entry.get()
    		self.account = self.account_entry.get()
    		self.ifci = self.ifci_entry.get()

    		c.execute('INSERT INTO Employee_Details(Employee_name,Employee_id,Contact_no,Alternate_no,Designation,E_mail,Account_no,Ifci_code)VALUES(?,?,?,?,?,?,?,?)',
    			(self.name,self.emp_id,self.contact,self.designation,self.alternate_no,self.email,self.account,self.ifci))
    		ms.showinfo("Success","Saved Successfully!")
    		db.commit()
    		c.close()


    def clear_entry(self,*args):
        self.name_entry.delete('0',END)
        self.id_entry.delete('0',END)
        self.no_entry.delete('0',END)
        self.alternate_no_ent.delete('0',END)
        self.email_entry.delete('0',END)
        self.account_entry.delete('0',END)
        self.ifci_entry.delete('0',END)


    def insert_update_1(self,*args):
        if self.name_entry.get()==''or self.no_entry.get()=='' or self.dsg_combo.get()=='':
            return
        else:
            self.treeview.insert('', 'end', text=""+str(self.i),
                values=(self.date_label.cget("text"),self.name_entry.get(),self.id_entry.get(),self.no_entry.get(),self.alternate_no_ent.get(),self.dsg_combo.get(),
                    self.email_entry.get(),self.account_entry.get(),self.ifci_entry.get()))
            self.i = self.i + 1

    def emp_submit_bttn(self,*args):
        self.employee_db()
        self.insert_update_1()
        self.clear_entry()

    def InputVal(self,inp):
    	if inp.isdigit():
    		return True
    	else:
    		return False

    def InputVal1(self,inp1):
    	if inp1.isalpha():
    		return True
    	else:
    		return False

    def mcallback_1(self,sv,arg=None):
    	if sv.get()=="":
    		return
    	if arg=='self.account_entry':
    		sv.set(''.join(e for e in sv.get() if e.isalnum()))
    		if len(sv.get())>20:
    			sv.set(sv.get()[:20])

    	elif arg=='self.ifci_entry':
    		sv.set(''.join(e for e in sv.get() if e.isalnum()))
    		if len(sv.get())>16:
    			sv.set(sv.get()[:16])
            # else:        
            #     sv.set(re.sub("\D", "",sv.get()))
            #     if arg is not None:
            #         if arg=='area':
            #             if len(sv.get())>4:
            #                 sv.set(sv.get()[:4])

            #         if arg=='self.pin_entry':
            #             if len(sv.get())>6:
            #                 sv.set(sv.get()[:6])
            #     else: 
            #         if len(sv.get()) >= 10:
            #             sv.set(sv.get()[:5]+sv.get()[5:10])

    def add_employees(self,*args):
        win = Toplevel(self.window)
        win.geometry("%dx%d%+d%+d" % (900, 600, 100, 50))
        win.grab_set()
        win.resizable(0, 0)
        win.transient(self.window)
        win.wm_title("Add Employee's")
        self.main_frame = Frame(win,width=950,height=600,bg="#9AF1F9")
        self.main_frame.place(relx=0,rely=0)
        self.bttm_label = Label(self.main_frame,text="*These fields are mandatory.",font=('Helvetica 10 bold'),bg="#9AF1F9",width=30)
        self.bttm_label.place(relx=0,rely=0.93)

        self.hadder = Frame(self.main_frame,width=950,height=50,bg="#05B5C4")
        self.top_label = Label(self.hadder,text="Add Employee Details :",bg="#05B5C4",font=('Arial 12 bold'),width=30)
        self.top_label.place(relx=0,rely=0.1)
        self.date_label= Label(self.hadder,text=str(self.today),width=20,height=1,font=('Arial 12 bold'),bg="#05B5C4")
        self.date_label.place(relx=0.7,rely=0.1)
        self.hadder.place(relx=0,rely=0)
        self.name = Label(self.main_frame,text="*Employee's Name :",width=15,bg="#9AF1F9",font=('arial 10 bold'))
        self.name.place(relx=0.04,rely=0.12)
        reg1 = window.register(self.InputVal1)
        self.name_entry = Entry(self.main_frame,width=30,bd=2,validate='key',vcmd=(reg1,'%S'))
        self.name_entry.place(relx=0.19,rely=0.12)
        self.employee_id = Label(self.main_frame,text="Employee id :",width=15,bg="#9AF1F9",font=('Arial 10 bold'))
        self.employee_id.place(relx=0.51,rely=0.12)
        self.id_entry = Entry(self.main_frame,width=30,bd=2)
        self.id_entry.place(relx=0.71,rely=0.12)
        
        self.contact = Label(self.main_frame,text="*Contact No. :",bg="#9AF1F9",width=15,font=('Arial 10 bold'))
        self.contact.place(relx=0.04,rely=0.2)
        phonesv = StringVar()
        self.no_entry = Entry(self.main_frame,width=30,bd=2,textvariable=phonesv)
        self.no_entry.place(relx=0.19,rely=0.2)
        phonesv.trace("w", lambda name, index, mode, sv=phonesv: self.mcallback(sv))
        self.mylist = list(('Manager','Waiter','Chef','Senior Manager'))
        self.designation = Label(self.main_frame,text="*Designation :",bg="#9AF1F9",width=15,font=('Arial 10 bold'))
        self.designation.place(relx=0.51,rely=0.2)
        self.dsg_combo = ttk.Combobox(self.main_frame,width=28)
        self.dsg_combo['values'] = self.mylist
        self.dsg_combo.set("Select Designation")
        self.dsg_combo.place(relx=0.71,rely=0.2)
        self.alternate_no = Label(self.main_frame,text="Alternate No. :",bg="#9AF1F9",width=15,font='Arial 10 bold')
        self.alternate_no.place(relx=0.04,rely=0.28)
        phonesv1 = StringVar()
        self.alternate_no_ent = Entry(self.main_frame,width=30,bd=2,textvariable=phonesv1)
        self.alternate_no_ent.place(relx=0.19,rely=0.28)
        phonesv1.trace("w", lambda name, index, mode, sv=phonesv1: self.mcallback(sv))
        self.email = Label(self.main_frame,text="E-mail :",width=15,bg="#9AF1F9",font=('Arial 10 bold'))
        self.email.place(relx=0.51,rely=0.28)
        self.email_entry = Entry(self.main_frame,width=30,bd=2)
        self.email_entry.place(relx=0.71,rely=0.28)
        
        self.Account_no = Label(self.main_frame,text="Account No. :",bg="#9AF1F9",width=15,font='arial 10 bold')
        self.Account_no.place(relx=0.04,rely=0.36)
        act_no = StringVar()
        self.account_entry = Entry(self.main_frame,width=30,bd=2,textvariable=act_no)
        self.account_entry.place(relx=0.19,rely=0.36)
        act_no.trace("w", lambda name, index, mode, sv=act_no: self.mcallback_1(sv,'self.account_entry'))
        
        self.ifci = Label(self.main_frame,text="IFCI Code :",width=15,bg="#9AF1F9",font=('Arial 10 bold'))
        self.ifci.place(relx=0.51,rely=0.36)
        ifci_no = StringVar()
        self.ifci_entry = Entry(self.main_frame,width=30,bd=2,textvariable=ifci_no)
        self.ifci_entry.place(relx=0.71,rely=0.36)
        ifci_no.trace("w", lambda name, index, mode, sv=ifci_no: self.mcallback_1(sv,'self.ifci_entry'))
        self.name_entry.bind("<Return>",self.emp_submit_bttn)
        self.submit_button = Button(self.main_frame,text="Submit",bg="#F71708",width=15,height=2,command=self.emp_submit_bttn,font=('Arial 10 bold'))
        self.submit_button.place(relx=0.39,rely=0.42)
        self.mid_frame = Frame(self.main_frame,width=950,height=230)
        self.tree = ttk.Treeview(self.mid_frame,style="Custom.Treeview",
            columns=('Date','Employee Name', 'Emp_id','Cont.no.','Altr.no.','E-mail','Designation','Account_no','Ifci_code'))
        self.ysb = ttk.Scrollbar(self.mid_frame, orient=VERTICAL, command=self.tree.yview)
        self.xsb = ttk.Scrollbar(self.mid_frame, orient=HORIZONTAL, command=self.tree.xview)
        self.tree.configure(yscroll=self.ysb.set, xscroll=self.xsb.set)
        self.tree.heading('#0', text='S.no')
        self.tree.heading('#1', text='Date')
        self.tree.heading('#2', text='Employee_name')
        self.tree.heading('#3', text='Emp_id')
        self.tree.heading('#4', text='Cont_no')
        self.tree.heading('#5', text='Altr_no')
        self.tree.heading('#6', text='Designation')
        self.tree.heading('#7', text='E_mail')
        self.tree.heading('#8', text='Acc.no.')
        self.tree.heading('#9', text='Ifci_code')
        self.tree.column('#0',minwidth=0,width=50, stretch=False)
        self.tree.column('#1',minwidth=0,width=80, stretch=False)
        self.tree.column('#2',minwidth=0,width=100, stretch=False)
        self.tree.column('#3',minwidth=0,width=100, stretch=False)
        self.tree.column('#4',minwidth=0,width=100, stretch=False)
        self.tree.column('#5',minwidth=0,width=100, stretch=False)
        self.tree.column('#6',minwidth=0,width=80, stretch=False)
        self.tree.column('#7',minwidth=0,width=70, stretch=False)
        self.tree.column('#8',minwidth=0,width=100, stretch=False)
        self.tree.column('#9',minwidth=0,width=100, stretch=False)
        self.ysb.pack(anchor=E, fill=Y, side=RIGHT)
        self.xsb.pack(anchor=S, fill=X, side=BOTTOM)
        self.tree.pack(expand=True, fill=BOTH)
        self.treeview = self.tree
        self.i = 1
        self.mid_frame.place(relx=0,rely=0.51)
        # self.close_bttn = Button(self.main_frame,text="Close",width=15,height=2,font=('Arial 11 bold'),command=self.emp_close_button)
        # self.close_bttn.place(relx=0.38,rely=0.91)

        
    def cb_5_item_input(self):
        with sqlite3.connect('restaurent_pos.db') as db:
            c = db.cursor()
            query = c.execute('SELECT Item_name FROM Kitchen_store')
            data = [ ]
            for row in c.fetchall():
                data.append(row[0])
                c.close()
            return data

    def update1(self,*args,**kwargs):
    	if self.qty_entry.get()=='' or self.rate_entry.get()=='' or self.cd_1.get()=='':
    		ms.showerror("Error","Kindly fill valid entry!",parent=self.hadder)
    		return
    	else:
    		with sqlite3.connect('restaurent_pos.db') as bd:
    			c = db.cursor()
    		self.u1 = self.cb_1.get()
    		self.u2 = self.qty_entry.get()
    		self.u3 = self.rate_entry.get()
    		self.u4 = self.chef_entry.get()

    		c.execute("UPDATE Kitchen_store SET Item_name=?,Quantity=?,Rate=?,chef=? WHERE Item_name = ? ",
    			(self.u1,self.u2,self.u3,self.u4,self.cb_1.get()))
    		db.commit()
    		ms.showinfo("Success","Update Successfully",parent=self.hadder)
    		self.insert_update()


    def insert_update(self):
        if self.cb_1.get()==''or self.qty_entry.get()==''or self.rate_entry.get()=='':
            return
        else:
            self.treeview.insert('', 'end', text=""+str(self.i),
                values=(self.date_label.cget("text"),self.cb_1.get(),self.qty_entry.get(),self.rate_entry.get(),self.chef_entry.get()))
            self.i = self.i + 1

    def update_selling(self):
        win = Toplevel(self.window)
        win.geometry("%dx%d%+d%+d" % (700, 600, 180, 50))
        win.grab_set()
        win.resizable(0, 0)
        win.transient(self.window)
        win.wm_title("Update Stock")
        self.hadder = Frame(win,width=700,height=50,bg="#05B5C4")
        self.top_label = Label(self.hadder,text="Update on Stock Data",width=30,font=('Arial 14 bold'),bg="#05B5C4")
        self.top_label.place(relx=0,rely=0.2)
        self.date_label= Label(self.hadder,text=str(self.today),width=25,height=1,font=('Arial 12 bold'),bg="#05B5C4")
        self.date_label.place(relx=0.7,rely=0.2)
        self.hadder.place(relx=0,rely=0)
        self.top_frame = Frame(win,width=900,height=180,bg="#ACF5FB")
        #self.item_name_label = Label(self.top_frame,text="Item Name :",width=15,font=('Arial 11 bold'))
        #self.item_name_label.place(relx=0.37,rely=0.04)
        self.item_name_label = Label(win,text="Item Name :",width=14,font=('arial 11 bold'))
        self.item_name_label.place(relx=0.02,rely=0.1)
        self.cb_1 = ttk.Combobox(win,width=23)
        self.cb_1['values'] = (self.cb_5_item_input())
        self.cb_1.place(relx=0.22,rely=0.1)
        self.cb_1.set("Select Item")
        self.item_qty = Label(win,text="Quantity :",width=14,font=("arial 11 bold"))
        self.item_qty.place(relx=0.02,rely=0.24)
        self.qty_entry = Entry(win,width=25,bd=2)
        self.qty_entry.place(relx=0.22,rely=0.24)
        self.item_rate = Label(win,text="Item Rate :",width=14,font=('Arial 11 bold'))
        self.item_rate.place(relx=0.02,rely=0.17)
        self.rate_entry = Entry(win,width=25,bd=2)
        self.rate_entry.place(relx=0.22,rely=0.17)
        self.chef_name_label = Label(win,text="Chef :",width=14,font=('Arial 11 bold'))
        self.chef_name_label.place(relx=0.02,rely=0.31)
        self.chef_entry = Entry(win,width=25,bd=2)
        self.chef_entry.place(relx=0.22,rely=0.31)
        self.search_bttn = Button(win,text="Search Item",width=22,height=2,command=self.search_db,font=("Arial 11 bold"))
        self.search_bttn.place(relx=0.53,rely=0.1)
        self.update_bttn = Button(win,text="Update",width=22,height=2,command= self.update1,font=("arial 11 bold"),bg="red")
        self.update_bttn.place(relx=0.53,rely=0.26)
        self.top_frame.place(relx=0,rely=0.08)
        self.mid_frame = Frame(win,width=720,height=300)
        self.tree = ttk.Treeview(self.mid_frame,
            columns=('Date','Item Name', 'Quantity','Per item Rate','Cooked By'), style="Custom.Treeview")
        self.tree.heading('#0', text='S.no')
        self.tree.heading('#1', text='Date')
        self.tree.heading('#2', text='Item_name')
        self.tree.heading('#3', text='Quantity')
        self.tree.heading('#4', text='Per Rate Item')
        self.tree.heading('#5', text='Cooked By')
        self.tree.column('#0',minwidth=0,width=50, stretch=YES)
        self.tree.column('#1',minwidth=0,width=100, stretch=YES)
        self.tree.column('#2',minwidth=0,width=100, stretch=YES)
        self.tree.column('#3',minwidth=0,width=150, stretch=YES)
        self.tree.column('#4',minwidth=0,width=150, stretch=YES)
        self.tree.column('#5',minwidth=0,width=120, stretch=YES)
        self.tree.place(relx=0.02,rely=0.04)
        self.treeview = self.tree
        self.i = 1
        self.mid_frame.place(relx=0,rely=0.43)
        self.bottom_frame = Frame(win,width=720,height=100,bg="lightblue")
        # self.cls_bttn = Button(self.bottom_frame,text="Close",width=15,height=2,font=('arial 11 bold'),command=self.close_1)
        # self.cls_bttn.place(relx=0.4,rely=0.04)
        self.bottom_frame.place(relx=0,rely=0.8)

    def search_db(self,*args,**kwargs):
    	if self.cb_1.get()=='':
    		ms.showerror("Error","Kindly select Item",parent=self.hadder)
    		return
    	else:
    		with sqlite3.connect('restaurent_pos.db') as db:
    			c = db.cursor()
    		c.execute("SELECT * FROM Kitchen_store WHERE Item_name = ?",(self.cb_1.get(), ))
    		rows = c.fetchone()
    		if rows is None:
    			ms.showerror("Error","Item Not Available",parent=self.hadder)
    			return
    		else:
    			for r in rows:
    				self.n1 = rows[4]
    				self.n2 = rows[5]
    				self.n3 = rows[6]
    				db.commit()
    			self.qty_entry.delete(0,END)
    			self.qty_entry.insert(0, self.n1)
    			self.rate_entry.delete(0,END)
    			self.rate_entry.insert(0, self.n2)
    			self.chef_entry.delete(0,END)
    			self.chef_entry.insert(0, self.n3)

    def cb_6_item_input(self):
        with sqlite3.connect('restaurent_pos.db') as db:
            c = db.cursor()
            query = c.execute('SELECT Item_name FROM Kitchen_store')
            data = [ ]
            for row in c.fetchall():
                data.append(row[0])
                c.close()
            return data

    def salling(self):
        c.execute("SELECT * FROM Restaurent_Detail")
        rows = c.fetchall()
        for y in rows:
            self.k1 = y[1]
            self.k2 = y[2]
            self.k3 = y[3]
            self.k4 = y[4]
            self.k5 = y[5]
            self.k6 = y[6]
            self.k7 = y[7]
            self.k8 = y[8]
            self.k9 = y[9]
            self.k10 = y[10]
        win = Toplevel(self.window)
        win.geometry("%dx%d%+d%+d" % (900, 600, 150, 60))
        win.grab_set()
        win.transient(self.window)
        win.wm_title("Sales Bill")
        self.main_frame = Frame(win,width=900,height=600,bg="#9AF1F9")
        self.main_frame.place(relx=0,rely=0)
        self.right_frame = Frame(self.main_frame,width=450,height=600)
        self.hadder = Frame(self.right_frame,width=450,height=100,bg="#05B5C4")
        self.top_label_1 = Label(self.hadder,text= str(self.k1),width=25,font=('Arial 14 bold'),bg="#05B5C4")
        self.top_label_1.place(relx=0.18,rely=0.01)
        self.top_label_2 = Label(self.hadder,text= str(self.k2)+","+str(self.k4),width=30,font=('Arial 10 bold'),bg="#05B5C4")
        self.top_label_2.place(relx=0.2,rely=0.28)
        self.top_label_3 = Label(self.hadder,text= str(self.k5)+","+str(self.k8)+","+str(self.k9),width=30,height=2,font=('Arial 10 bold'),bg="#05B5C4")
        self.top_label_3.place(relx=0.2,rely=0.48)
        self.d_label= Label(self.hadder,text=str(self.today),width=10,height=1,font=('Arial 12 bold'),bg="#05B5C4")
        self.d_label.place(relx=0.74,rely=0.01)
        self.t_label= Label(self.hadder,text=str(self.time_0),width=12,height=1,font=('Arial 12 bold'),bg="#05B5C4")
        self.t_label.place(relx=0,rely=0.01)
        self.hadder.place(relx=0,rely=0)
        # self.date_label= Label(self.right_frame,text="Today's Date  : " + str(self.today),width=25,height=1,font=('Arial 12 bold'),bg="lightblue")
        # self.date_label.place(relx=0,rely=0.1)
        self.top_frame = Frame(self.right_frame,width=450,bg="lightblue",height=60)
        self.item_label = Label(self.top_frame,text= "Item Name ",width=15,height=2,font=('Arial 12 bold'),bg="lightblue")
        self.item_label.place(relx=0.02,rely=0.18)
        # items = self.cb_6_item_input()
        # def matches(fieldValue, acListEntry):
        # 	pattern = re.compile(re.escape(fieldValue) + '.*', re.IGNORECASE)
        # 	return re.match(pattern, acListEntry)
        # self.cb_5 = AutocompleteEntry(items, self.top_frame,bd=2, listboxLength=6, width=20, matchesFunction=matches)
        # self.cb_5.place(relx=0.32,rely=0.31)
        self.cb_5 = ttk.Combobox(self.top_frame,width=20)
        self.cb_5.place(relx=0.32,rely=0.3)
        #self.cb_5.set("Select Item")
        self.cb_5["values"] = self.cb_6_item_input()
        self.conform_bttn = Button(self.top_frame,text="Search",width=12,font=('Arial 10 bold'),height=2,command=self.get_item)
        self.conform_bttn.place(relx=0.68,rely=0.18)
        self.top_frame.place(relx=0,rely=0.15)
        self.order_type_lbl = Label(self.right_frame,width=20,text= "",font=('Arial 12 bold'))
        self.order_type_lbl .place(relx=0.2,rely=0.25)

        self.u_item = Label(self.right_frame,width=20,text= "",font=('Arial 12 bold'))
        self.u_item.place(relx=0.05,rely=0.33)
        self.irate = Label(self.right_frame,width=20,text= "",font=('Arial 12 bold'))
        self.irate.place(relx=0.05,rely=0.39)
        self.right_frame.place(relx=0,rely=0)

        self.left_frame = Frame(self.main_frame,width=450,height=600,bg="lightblue")
        # self.date_label= Label(self.left_frame,text="Today's Date  : " + str(self.today),width=25,height=1,font=('Arial 12 bold'),bg="lightblue")
        # self.date_label.place(relx=0,rely=0)
        self.item_label = Label(self.left_frame,text="Item Name",width=15,font=('Arial 14 bold'),bg="lightblue")
        self.item_label.place(relx=0.01,rely=0.06)
        self.qty_label = Label(self.left_frame,text="Quantity",width=15,font=('Arial 14 bold'),bg="lightblue")
        self.qty_label.place(relx=0.34,rely=0.06)

        self.total = Label(self.left_frame,width=15,height=2,text= "",font=('Arial 14 bold'),bg="lightblue")
        self.total.place(relx=0,rely=0.72)

        self.amount_label = Label(self.main_frame,text="Amount",width=15,font=('Arial 14 bold'),bg="lightblue")
        self.amount_label.place(relx=0.83,rely=0.06) 

        self.left_frame.place(relx=0.5,rely=0 )
        self.bottom_frame = Frame(self.main_frame,width=450,bg="lightblue",height=80)
        # self.close_bttn_1 = Button(self.bottom_frame,text="Close",width=44,height=2,command=self.main_devision,font=('Arial 12 bold'))
        # self.close_bttn_1.place(relx=0,rely=0.12)
        self.bill_bttn = Button(self.main_frame,text="Generate Bill",width=44,height=2,command=self.generate_bill_bttn,bg="red",font=('Arial 12 bold'))
        self.bill_bttn.place(relx=0,rely=0.7)
        self.bill_bttn.bind("<Return>",self.generate_bill_bttn)
        self.bottom_frame.place(relx=0,rely=0.78)

#==========insert in reports==========#
   
    def get_item(self,*args,**kwargs):
    	if self.cb_5.get()== '':
    		ms.showerror("Error","Kindly Select Item!",parent=self.main_frame)
    		return
    	else:
    		with sqlite3.connect('restaurent_pos.db') as db:
    			c = db.cursor()

    		c.execute("SELECT * FROM Kitchen_store WHERE Item_name = ?", (self.cb_5.get() ,))
    		rows = c.fetchone()
    		if rows is None:
    			ms.showerror("Error","Item Not Available!",parent=self.right_frame)
    			return
    		else:
    			self.n5 = rows[3]
    			self.n7 = rows[4]
    			self.n6 = rows[5]
    			self.u_item.configure(text="Item Name : " + str(self.n5))
    			self.irate.configure(text= "Rate Rs :  "+ str(self.n6))
    			self.qty_label = Label(self.right_frame,text="Enter Quantity",width=12,height=2,font=('Arial 12 bold'))
    			self.qty_label.place(relx=0.02,rely=0.48)
    			validation = window.register(self.only_numbers)
    			self.qty_entry = Entry(self.right_frame,width=23,validate="key",validatecommand=(validation, '%S'))
    			self.qty_entry.place(relx=0.32,rely=0.5)
    			self.givn_ammount = Label(self.right_frame,text="Given Amount",width=10,height=2,font=('Arial 12 bold'))
    			self.amt_entry = Entry(self.right_frame,width=23,validate="key",validatecommand=(validation, '%S'))
    			self.cal_bttn = Button(self.right_frame,text="Calculate",width=12,font=('Arial 10 bold'),height=2,command=self.change)
    			self.conform_bttn = Button(self.right_frame,text="Confirm",width=12,font=('Arial 10 bold'),height=2,command=self.add_to_bill)
    			self.conform_bttn.place(relx=0.7,rely=0.48)
    		
    def add_to_bill(self, *args, **kwargs):
        self.quantity_value = int(self.qty_entry.get())
        if self.quantity_value > int(self.n7):
            ms.showerror("Error","Item Quantity is not available on stock!",parent=self.right_frame)

        else:
            self.final_price = float(self.quantity_value) * float(self.n6)
            item_name_list.append(self.n5)
            item_price_list.append(self.final_price)
            item_quantity_list.append(self.quantity_value)

            self.x_index = 0
            self.y_index = 100
            self.counter = 0

            for self.p in item_name_list:
                self.tempname = Label(self.left_frame,text= str(item_name_list[self.counter]),font=('Arial 12 bold'),bg="lightblue")
                self.tempname.place(x=50,y=self.y_index)
                label_list.append(self.tempname)

                self.tempqty = Label(self.left_frame,text= str(item_quantity_list[self.counter]),font=('Arial 12 bold'),bg="lightblue")
                self.tempqty.place(x=200,y=self.y_index)
                label_list.append(self.tempqty)

                self.temprice = Label(self.left_frame,text= str(item_price_list[self.counter]),font=('Arial 12 bold'),bg="lightblue")
                self.temprice.place(x=350,y=self.y_index)
                label_list.append(self.temprice)

                self.y_index += 40
                self.counter += 1

                self.total.configure(text="Total Rs : " + str(sum(item_price_list)))

                self.qty_label.place_forget()
                self.qty_entry.place_forget()
                self.givn_ammount.place(relx=0.04,rely=0.59)
                self.amt_entry.place(relx=0.32,rely=0.61)
                self.cal_bttn.place(relx=0.7,rely=0.58)
                self.conform_bttn.place_forget()
                self.amt_entry.delete('0' , END)
                #self.cb_5.delete('0' , END)
                

    def change(self,*args,**kwargs):
        self.amount_given = float(self.amt_entry.get())
        self.our_total = float(sum(item_price_list))

        self.to_give = self.amount_given - self.our_total

        self.change_label = Label(self.left_frame,text="Change Rs. "+ str(self.to_give),font=('Arial 14 bold'),bg='lightblue')
        self.change_label.place(relx=0.58,rely=0.73)
 
    def generate_bill(self,*args,**kwargs ):
        c.execute("SELECT * FROM Restaurent_Detail")
        rows = c.fetchall()
        for y in rows:
            self.k1 = y[1]
            self.k2 = y[2]
            self.k3 = y[3]
            self.k4 = y[4]
            self.k5 = y[5]
            self.k6 = y[6]
            self.k7 = y[7]
            self.k8 = y[8]
            self.k9 = y[9]
            self.k10 = y[10]

        company = str(self.k1)
        phone =  "+91"+ str(self.k2)
        email =  str(self.k4) + "," + str(self.k5)  
        address = str(self.k6) + ","+ str(self.k8) + ","+ str(self.k9)
        dt = str(self.today) + " " + str(self.time_0)
        order = str(self.order_type_lbl.cget("text"))

        printdata = []
        for line in (company,phone,email,address,dt,order,"----------------------","S.no  Item  Qty  ₹₹","----------------------"):
            printdata.append(line)
        i = 0
        for r,item_name in enumerate(item_name_list,1):
            printdata.append(str(r) + " " + str(item_name_list[i])[:5]  +" "+str(item_quantity_list[i]) +" "+str(item_price_list[i]) )
        i += 1

        printdata.append("\tTotal Rs." + str(sum(item_price_list)))
        printdata.append("----- Thanks For Visiting----")
        printjob('POS-58-Series',printdata)

#====================Database Update==========================#
        self.p = 0 
        initial ="SELECT * FROM Kitchen_store WHERE Item_name = ?"
        result = c.execute(initial,(item_name_list[self.p], ))    

        for i in item_quantity_list:
        	for rt in result:
        		self.old_stock = rt[4]
        	self.new_stock =   int(self.old_stock) - int(item_quantity_list[self.p])

        	c.execute("UPDATE Kitchen_store SET Quantity=? WHERE Item_name=? ",
        		(self.new_stock,item_name_list[self.p] )) 
        	db.commit()

        	self.d1 =self.d_label.cget("text")
        	self.t1 = self.t_label.cget("text")
        	self.t2 = self.order_type_lbl.cget("text")

        	sql = 'INSERT INTO Reports (Item_name,Quantity,Amount,Date,Time,Order_type) VALUES(?,?,?,?,?,?) '
        	c.execute(sql,(item_name_list[self.p], item_quantity_list[self.p], item_price_list[self.p],self.d1,self.t1,self.t2))
        	db.commit()

        	self.p += 1

        for a in label_list:
        	a.destroy()

        del(item_name_list[:])
        del(item_quantity_list[:])
        del(item_price_list[:])

        self.total.configure(text="")
        self.amt_entry.configure(text="")
        self.change_label.configure(text="")
        ms.showinfo("Success","Bill Generated Successfully ")

    def generate_bill_bttn(self):
        if self.total.cget("text")=='':
        	ms.showerror("Error","Bill menu is empty.",parent=self.right_frame)
        	return
        else:
        	self.generate_bill()
            
    def cb_7_item_input(self):
        with sqlite3.connect('restaurent_pos.db') as db:
            c = db.cursor()
            query = c.execute('SELECT Employee_name FROM Employee_Details')
            data = [ ]
            for row in c.fetchall():
                data.append(row[0])
                c.close()
            return data

    def seacrh_emp(self,*args,**kwargs):
    	if self.name_combo11.get() == '':
    		ms.showerror("Error","Select Employee name",parent=self.main_frame)
    		return
    	else:
    		c.execute("SELECT * FROM Employee_Details WHERE Employee_name = ?",(self.name_combo11.get() ,))
    	rows = c.fetchone()
    	if rows is None:
    		ms.showerror("Error","Not Available in Database!",parent=self.main_frame)
    		return
    	else:
    		self.d0 = rows[0]
    		self.d1 = rows[1]
    		self.d2 = rows[2]
    		self.d3 = rows[3]
    		self.d4 = rows[4]
    		self.d5 = rows[5]
    		self.d6 = rows[6]
    		self.d7 = rows[7]
    		self.d8 = rows[8]

    		self.treeview.insert('', 'end', text=""+str(self.i),
    			values=(self.date_label.cget("text"),self.d1,self.d2,self.d3,self.d5,self.d4,self.d6,self.d7,
    				self.d8))
    		self.i = self.i + 1

    def get_emp_db(self,*args,**kwargs):
        win = Toplevel(self.window)
        win.geometry("%dx%d%+d%+d" % (950, 500, 240, 80))
        win.grab_set()
        win.resizable(0, 0)
        win.transient(self.window)
        win.wm_title("Employee's Report")
        self.main_frame = Frame(win,width=950,height=500,bg="#9AF1F9")
        self.hadder = Frame(self.main_frame,width=950,height=50,bg="#05B5C4")
        self.top_label = Label(self.hadder,text="Search Employee's By Name :",width=60,font=('Arial 14 bold'),bg="#05B5C4")
        self.top_label.place(relx=0,rely=0.08)
        self.date_label= Label(self.hadder,text=str(self.today),width=25,height=1,font=('Arial 12 bold'),bg="#05B5C4")
        self.date_label.place(relx=0.7,rely=0.08)
        self.hadder.place(relx=0,rely=0)
        self.name_label = Label(self.main_frame,text="Employee Name :",width=20,font=('Arial 11 bold'))
        self.name_label.place(relx=0.25,rely=0.15)

        self.name_combo11 = ttk.Combobox(self.main_frame,width=24,justify='center')
        self.name_combo11.place(relx=0.45,rely=0.15)
        self.name_combo11.set("Select Name")
        self.name_combo11['values'] = self.cb_7_item_input()
        # self.name_combo.option_add('*TCombobox*Listbox.Justify', 'center')
        self.name_combo11.bind("<Return>",self.seacrh_emp)

        self.serch_bttn = Button(self.main_frame,text="Search",width=15,height=2,command=self.seacrh_emp,font=('arial 10 bold'))
        self.serch_bttn.place(relx=0.65,rely=0.15)
        self.tree = ttk.Treeview(self.main_frame,style="Custom.Treeview",
            columns=('Date','Employee Name', 'Emp.Id','Contact_no','Alternate_no','Designation','E_mail','Account_no','Ifci_code'))
        self.tree.heading('#0', text='S.no')
        self.tree.heading('#1', text='Date')
        self.tree.heading('#2', text='Employee_name')
        self.tree.heading('#3', text='Emp.Id')
        self.tree.heading('#4', text='Contact_no')
        self.tree.heading('#5', text='Alternate_no')
        self.tree.heading('#6', text='Designation')
        self.tree.heading('#7', text='E_mail')
        self.tree.heading('#8', text='Account_no')
        self.tree.heading('#9', text='Ifci_code')
        self.tree.column('#0',minwidth=0,width=50, stretch=YES)
        self.tree.column('#1',minwidth=0,width=90, stretch=YES)
        self.tree.column('#2',minwidth=0,width=100, stretch=YES)
        self.tree.column('#3',minwidth=0,width=70, stretch=YES)
        self.tree.column('#4',minwidth=0,width=100, stretch=YES)
        self.tree.column('#5',minwidth=0,width=100, stretch=YES)
        self.tree.column('#6',minwidth=0,width=100, stretch=YES)
        self.tree.column('#7',minwidth=0,width=100, stretch=YES)
        self.tree.column('#8',minwidth=0,width=100, stretch=YES)
        self.tree.column('#9',minwidth=0,width=100, stretch=YES)
        self.tree.place(relx=0.02,rely=0.27)
        self.treeview = self.tree
        self.i = 1

        # self.close_bttn_2 = Button(self.main_frame,text="Close",width=15,height=2,font=('Arial 11 bold'),command=self.emp_close_b1)
        # self.close_bttn_2.place(relx=0.4,rely=0.85)
        self.main_frame.place(relx=0,rely=0)

    def cb_8_item_input(self):
        with sqlite3.connect('restaurent_pos.db') as db:
            c = db.cursor()
            query = c.execute('SELECT Date FROM Reports')
            data = list( )
            for column in c.fetchall():
                data.append(column)
                c.close()
            return data

    def get_report(self,*args,**kwargs):
        win = Toplevel(self.window)
        win.geometry("%dx%d%+d%+d" % (700, 500, 240, 80))
        win.grab_set()
        win.transient(self.window)
        win.resizable(0, 0)
        win.wm_title("Sales Report")
        self.main_frame = Frame(win,width=700,height=500,bg="lightblue")
        self.top_frame = Frame(self.main_frame,width=700,height=50)
        self.top_frame.place(relx=0,rely=0)
        self.top_frame2 = Frame(self.main_frame,width=700,height=50,bg="#05B5C4")
        self.top_frame2.place(relx=0,rely=0.1)
        self.top_frame3 = Frame(self.main_frame,width=700,height=300)
        self.top_frame3.place(relx=0,rely=0.18)
        self.top_label = Label(self.top_frame,text="Daily Sales Report",width=60,height=2,font=('Arial 14 bold'),bg="#05B5C4")
        self.top_label.place(relx=0,rely=0)
        self.Date_label = Label(self.top_frame2,text="Select Date :",width=15,font=('Arial 11 bold'))
        self.Date_label.place(relx=0.14,rely=0.08)
        self.cb = ttk.Combobox(self.top_frame2,width=25)
        self.cb.place(relx=0.36,rely=0.12)
        #self.cb.set("Select Date")
        self.cb["values"] = self.cb_8_item_input()
        def search_rpt(*args,**kwargs):
        	if self.cb.get() == '':
        		ms.showerror("Error","Select Date First",parent=win)
        		return
        	else:
        		self.cb.place_forget()
        		self.cnfm_bttn.place_forget()
        		with sqlite3.connect('restaurent_pos.db') as db:
        			c = db.cursor()
        		c.execute("SELECT * FROM Reports WHERE Date = ?",(self.cb.get() ,))
        		columns = c.fetchall()
        		headings = ('S.no.','Item_name', 'Quantity','Amount','Date','Time','Order_Type')
        		self.view_(self.top_frame3,headings,columns)
        		self.cb.bind("<Return>",search_rpt)
        self.cnfm_bttn = Button(self.top_frame2,text="Confirm",width=15,height=1,font=('Arial 11 bold'),command=search_rpt)
        self.cnfm_bttn.place(relx=0.64,rely=0.12)
        # self.cls_bttn = Button(self.main_frame,text="Close",width=15,height=2,font=('Arial 11 bold'),command=self.close_0)
        # self.cls_bttn.place(relx=0.4,rely=0.8)
        self.main_frame.place(relx=0,rely=0)

    def log_off_bttn1(self):
        answer=ms.askquestion("Quit", "Are you sure ?")
        if answer=="yes":
            # self.user_name.delete("0", END)
            # self.password_entry.delete("0", END)
            self.window.wm_state('iconic')
            self.window.resizable(False,False)
            emptyMenu = Menu(window)
            window.config(menu=emptyMenu)
            self.mframe.destroy()
            self.s_frame.place_forget()
            self.log_in()

    def cb_9_item_input(self):
        with sqlite3.connect('restaurent_pos.db') as db:
            c = db.cursor()
            query = c.execute('SELECT Store_name FROM Restaurent_Details')
            data = [ ]
            for row in c.fetchall():
                data.append(row[0])
                c.close()
            return data

    def update_details(self,*args):
    	if self.str_entry.get()==''or self.no_entry.get()=='' or self.e_mail_entry.get()=='' or self.website_entry.get()==''or self.address_entry.get()==''or self.pin_entry.get()=='' or self.city_entry.get()=='' or self.state_combo.get()== '' or self.country_combo.get()==''or self.gst_entry.get()=='':
    		ms.showerror("Error","Kindly fill valid details.",parent=self.main_frame)
    		return
    	else:
    		with sqlite3.connect('restaurent_pos.db') as bd:
    			c = db.cursor()
    			self.a1 = self.str_entry.get()
    			self.a2 = self.website_entry.get()
    			self.a3 = self.no_entry.get()
    			self.a4 = self.pin_entry.get()
    			self.a5 = self.address_entry.get()
    			self.a6 = self.city_entry.get()
    			self.a7 = self.state_combo.get()
    			self.a8 = self.country_combo.get()
    			self.a9 = self.gst_entry.get()
    			self.a10 = self.e_mail_entry.get()

    		c.execute("UPDATE Restaurent_Detail SET Store_name=?,Contact_number=?,E_mail=?,Website=?,Address=?,Pin=?,City=?,State=?,Country=?,Gst_no=? ",
    			(self.str_entry.get(), self.no_entry.get(),self.e_mail_entry.get(),self.website_entry.get(),self.address_entry.get(),self.pin_entry.get(),self.city_entry.get(),self.state_combo.get(),self.country_combo.get(),self.gst_entry.get()))
    		db.commit()
    		ms.showinfo("Success","Update Successfully",parent=self.main_frame)
    		self.str_entry.delete(0,END)
    		self.website_entry.delete(0,END)
    		self.no_entry.delete(0,END)
    		self.pin_entry.delete(0,END)
    		self.address_entry.delete(0,END)
    		self.city_entry.delete(0,END)
    		self.state_combo.delete(0,END)
    		self.country_combo.delete(0,END)
    		self.gst_entry.delete(0,END)
    		self.e_mail_entry.delete(0,END)

    def update_store_details(self,*args):
    	with sqlite3.connect('restaurent_pos.db') as db:
    		c = db.cursor()

    	c.execute("SELECT * FROM Restaurent_Detail ")
    	rows = c.fetchall()
    	#print(rows)
    	for r in rows:
    		self.s1 = r[1]
    		self.s2 = r[2]
    		self.s3 = r[3]
    		self.s4 = r[4]
    		self.s5 = r[5]
    		self.s6 = r[6]
    		self.s7 = r[7]
    		self.s8 = r[8]
    		self.s9 = r[9]
    		self.s10 = r[10]

    	win = Toplevel(self.window)
    	win.geometry("%dx%d%+d%+d" % (700, 600, 240, 80))
    	win.grab_set()
    	win.resizable(0, 0)
    	win.transient(self.window)
    	win.wm_title("Update Restaurent Details")
    	self.main_frame = Frame(win)
    	self.hadder = Frame(win,bg="#33D2DF")
    	self.label_1 = Label(win,text="Update Restaurent Details",bg="#33D2DF",width=60,height=2,font=('arial 14 bold'))
    	self.label_1.place(relx=0,rely=0)
    	self.hadder.place(relx=0,rely=0)
    	self.store_name_lable = Label(win,text='Restaurent Name :',width=20,font=('Arial 11 bold'))
    	self.store_name_lable.place(relx=0.04,rely=0.13)
    	self.str_entry = Entry(win,width=25,bd=2)
    	self.str_entry.place(relx=0.29,rely=0.13)
    	self.str_entry.insert(0,self.s1)
    	self.website_lable = Label(win,text='Website :',width=15,font=('arial 11 bold'))
    	self.website_lable.place(relx=0.04,rely=0.23)
    	self.website_entry = Entry(win,width=25,bd=2)
    	self.website_entry.place(relx=0.24,rely=0.23)
    	self.website_entry.insert(0,self.s4)
    	self.contact_lable = Label(win,text='Contact No. :',width=15,font=("arial 11 bold"))
    	self.contact_lable.place(relx=0.48,rely=0.23)
    	phonesv = StringVar()
    	self.no_entry = Entry(win,width=25,bd=2,textvariable=phonesv)
    	self.no_entry.place(relx=0.68,rely=0.23)
    	self.no_entry.insert(0,self.s2)
    	phonesv.trace("w", lambda name, index, mode, sv=phonesv: self.mcallback(sv))
    	self.pin_lable = Label(win,text='Pin/Zip : ',width=15,font=('Arial 11 bold'))
    	self.pin_lable.place(relx=0.04,rely=0.34)
    	Postalsv = StringVar()
    	self.pin_entry = Entry(win,width=25,bd=2,textvariable=Postalsv)
    	self.pin_entry.place(relx=0.24,rely=0.34)
    	self.pin_entry.insert(0,self.s6)
    	Postalsv.trace("w", lambda name, index, mode, sv=Postalsv: self.mcallback(sv,'self.pin_entry'))
    	self.address_lable = Label(win,text='Address :',width=15,font=('Arial 11 bold'))
    	self.address_lable.place(relx=0.48,rely=0.34)
    	self.address_entry = Entry(win,width=25,bd=2)
    	self.address_entry.place(relx=0.68,rely=0.35)
    	self.address_entry.insert(0,self.s5)
    	self.city_lable = Label(win,text='City : ',width=15,font=('Arial 11 bold'))
    	self.city_lable.place(relx=0.04,rely=0.44)
    	self.city_entry = Entry(win,width=25,bd=2)
    	self.city_entry.place(relx=0.24,rely=0.44)
    	self.city_entry.insert(0,self.s5)
    	self.state_lable = Label(win,text='State ',width=15,font=('Arial 11 bold'))
    	self.state_lable.place(relx=0.48,rely=0.44)
    	self.state = list(('Andra Pradesh','Arunachal Pradesh','Assam','Bihar',
    		'Chhattisgarh','Goa','Gujarat','Haryana','Himachal Pradesh','Jammu and Kashmir',
    		'Jharkhand','Karnataka','Kerala','Madya Pradesh','Maharashtra','Manipur','Meghalaya',
    		'Mizoram','Nagaland','Orissa','Punjab','Rajasthan','Sikkim','Tamil Nadu','Telagana',
    		'Tripura','Uttaranchal','Uttar Pradesh','West Bengal','Andaman and Nicobar Islands',
    		'Chandigarh','Dadar and Nagar Haveli','Daman and Diu','Delhi','Lakshadeep','Pondicherry'))
    	self.state_combo = ttk.Combobox(win,width=22,values=self.state)
    	self.state_combo.place(relx=0.68,rely=0.44)
    	self.state_combo.insert(0,self.s8)
    	self.country_lable = Label(win,text='Country ',width=15,font=('arial 11 bold'))
    	self.country_lable.place(relx=0.04,rely=0.54)
    	self.country = list(('India','Nepal'))
    	self.country_combo = ttk.Combobox(win,width=22,values=self.country)
    	self.country_combo.place(relx=0.24,rely=0.54)
    	self.country_combo.insert(0,self.s9)
    	self.gst_lable = Label(win,text='GST NO. :',width=15,font=('arial 11 bold'))
    	self.gst_lable.place(relx=0.48,rely=0.54)
    	gstsv = StringVar()
    	self.gst_entry = Entry(win,width=25,bd=2,textvariable=gstsv)
    	self.gst_entry.place(relx=0.68,rely=0.54)
    	self.gst_entry.insert(0,self.s10)
    	gstsv.trace("w", lambda name, index, mode, sv=gstsv: self.mcallback(sv,'self.gst_entry'))
    	self.E_mail_lable = Label(win,text='E-mail :',width=15,font=('Arial 11 bold'))
    	self.E_mail_lable.place(relx=0.04,rely=0.64)
    	self.e_mail_entry = Entry(win,width=25,bd=2)
    	self.e_mail_entry.place(relx=0.24,rely=0.64)
    	self.e_mail_entry.insert(0,self.s3)
    	self.bottom_frame = Frame(win,width=700,height=60,bg="#33D2DF")
    	self.e_mail_entry.bind("<Return>",self.update_details)
    	self.submit_button = Button(self.bottom_frame,text="Update",width=10,height=2,command=self.update_details,font=('arial 10 bold'))
    	self.submit_button.place(relx=0.4,rely=0.08)
    	# self.close_button = Button(self.bottom_frame,text="Close",width=10,height=2,command=self.main_devision,font=('arial 10 bold'))
    	# self.close_button.place(relx=0.48,rely=0.08)
    	self.bottom_frame.place(relx=0,rely=0.78)
    	self.main_frame.place(relx=0.08,rely=0.04)
        

    def account_dtl(self):
        self.main_frame = Frame(self.window,width=700,height=600,bg="#90EAFC")
        self.hadder = Label(self.main_frame,text="Add Account Details",width=20,height=2,font=('Arial 12 bold'))
        self.hadder.place(relx=0,rely=0.02)
        #================labels==================#
        self.name = Label(self.main_frame,text="Full Name :",width=20,height=1,font=('Arial 10 bold'))
        self.name.place(relx=0.01,rely=0.13)
        self.name = Label(self.main_frame,text="Full Name :",width=20,height=1,font=('Arial 10 bold'))
        self.name.place(relx=0.01,rely=0.2)
        self.main_frame.place(relx=0.14,rely=0.06)

    def clear_all(self):
        self.full_name_entry.delete("0",END)
        self.user_name_entry.delete("0",END)
        self.password_entry.delete("0",END)
        self.email_entry.delete("0",END)
        self.contact_entry.delete("0",END)
        self.id_entry.delete("0",END)
    
    def only_numbers(self,char):
        return char.isdigit()
    
    def upd_pwsd(self,*args):
        if self.pass_1.get()=='' or self.pass_2.get()=='':
        	ms.showerror("Error","Please fill valid entry!",parent=self.p_frame)
        	return
        if self.pass_1.get() != self.pass_2.get():
        	self.pass_1.delete("0", END)
        	self.pass_2.delete("0", END)
        	ms.showerror("Error","Password not match.",parent=self.p_frame)
        	return
        else:
            if self.phone_entry.get().isdigit():
                self.p = self.pass_1.get()
                with sqlite3.connect('restaurent_pos.db') as bd:
                    c = db.cursor()

                    c.execute("UPDATE user SET password=? WHERE contact_number=? ",(self.p,self.user_2 ))
                    db.commit()
                    ms.showinfo("Success","Password Update Successfully")
                    self.p_frame.place_forget()
                    self.log_in()
            else:
                self.p = self.pass_1.get()
                with sqlite3.connect('restaurent_pos.db') as bd:
                    c = db.cursor()
                    c.execute("UPDATE user SET password=? WHERE username=? ",(self.p,self.user_1 ))
                    db.commit()
                    ms.showinfo("Success","Password Update Successfully")
                    self.p_frame.place_forget()
                    self.log_in()

    def update_password(self,aframe=None):
        self.t_frame.place_forget()
        #self.m_frame.place_forget()
        self.s_frame.place_forget()
        master=self.window
        width = 705
        frm_width = master.winfo_rootx() - master.winfo_x()
        win_width = width + 2 * frm_width
        height = 320
        titlebar_height = master.winfo_rooty() - master.winfo_y()
        win_height = height + titlebar_height + frm_width
        x = master.winfo_screenwidth() // 2 - win_width // 2
        y = master.winfo_screenheight() // 2 - win_height // 2-30
        master.geometry('{}x{}+{}+{}'.format(width, height, x, y))
        master.deiconify()
        master.wm_title("Update Password")
        self.p_frame = Frame(self.window,width=705,height=320)
        self.p_frame.place(relx=0,rely=0)
        self.panel = Label(self.p_frame,image=self.update)
        self.panel.place(relx=0,rely=0)
        self.pass_1 = Entry(self.p_frame,width=30,bd=3,show="*")
        self.pass_1.place(relx=0.5,rely=0.44)
        self.pass_2 = Entry(self.p_frame,width=30,bd=2,show="*")
        self.pass_2.place(relx=0.5,rely=0.58)
        self.pass_2.bind("<Return>",self.upd_pwsd)
        self.update_bttn = Button(self.p_frame,text="Update",height=2,width=12,font=('arial 10 bold'),command=self.upd_pwsd)
        self.update_bttn.place(relx=0.44,rely=0.75)

       
    def check_mail(self,*args):
        #self.m_frame.place_forget()
        if self.phone_entry.get()=='' :
            ms.showerror("Error","Please fill valid details! ",parent=self.t_frame)
            return
        else:
            with sqlite3.connect('restaurent_pos.db') as db:
                c = db.cursor()
                if self.phone_entry.get().isdigit():
                    c.execute("SELECT * FROM user WHERE contact_number = ?", (self.phone_entry.get(),))
                    result  = c.fetchone()
                    if result:
                        self.qus = result[5]
                        self.ans = result[6]
                        self.user_2 = result[4]
                    else:
                        showerror('Error',"Phone Number not found.",parent=self.t_frame)
                        return
                else:
                    c.execute("SELECT * FROM user WHERE username = ?",(self.phone_entry.get(),))
                    result1  = c.fetchone()
                    if result1:
                        self.qus = result1[5]
                        self.ans = result1[6]
                        self.email_1 = result1[4]
                        self.user_1 = result1[2]
                    else:
                        showerror("Error","User Name not Found.",parent=self.t_frame)
                        return
          
        self.qust_label = Label(self.t_frame,width=60,height=2,font=('Arial 12 bold'))
        self.qust_label.place(relx=0.08,rely=0.48)
        self.qust_label.configure(text=str(self.qus))
        self.ans_lbl = Label(self.t_frame,text="Your Answer :",width=12,font=('Arial 11 bold'))
        self.ans_lbl.place(relx=0.16,rely=0.63)
        self.answ_entry = Entry(self.t_frame,width=35,bd=3)
        self.answ_entry.place(relx=0.33,rely=0.63)
        self.answ_entry.bind("<Return>",self.check_ans)
        self.sbt_bttn = Button(self.t_frame,text="Submit",height=2,width=14,font=('Arial 12 bold'),command=self.check_ans)
        self.sbt_bttn.place(relx=0.68,rely=0.61)

    def check_ans(self,*args):
        if self.answ_entry.get() != self.ans or self.answ_entry == '':
            ms.showerror("Error","Answer Not Matched!",parent=self.t_frame)
            self.answ_entry.delete("0",END)
            return
        else:
            ms.showinfo("Success","Answer Matched!",parent=self.t_frame)
            self.update_password()

    def forget_passwd(self):
        #self.m_frame.place_forget()
        self.s_frame.place_forget()
        master=self.window
        width = 705
        frm_width = master.winfo_rootx() - master.winfo_x()
        win_width = width + 2 * frm_width
        height = 505
        titlebar_height = master.winfo_rooty() - master.winfo_y()
        win_height = height + titlebar_height + frm_width
        x = master.winfo_screenwidth() // 2 - win_width // 2
        y = master.winfo_screenheight() // 2 - win_height // 2-30
        master.geometry('{}x{}+{}+{}'.format(width, height, x, y))
        master.deiconify()
        master.wm_title("Forget Password")
        self.t_frame = Frame(self.window,width=705,height=505)
        self.t_frame.place(relx=0,rely=0)
        self.window.resizable(False,False)
        self.panel = Label(self.t_frame,image=self.user)
        self.panel.place(relx=0,rely=0)
        self.phone_entry = Entry(self.t_frame,width=35,bd=3)
        self.phone_entry.place(relx=0.4,rely=0.27)
        self.phone_entry.bind("<Return>",self.check_mail)
        self.confirm_bttn = Button(self.t_frame,text="Confirm",width=15,height=2,font=('Arial 12 bold'),command=self.check_mail)
        self.confirm_bttn.place(relx=0.74,rely=0.24)
        self.bck_bttn = Button(self.t_frame,text="Back to Login",width=15,height=2,font=('Arial 12 bold'),command=self.log_in)
        self.bck_bttn.place(relx=0.74,rely=0.36)

    def backup(self):
            win = Toplevel()
            w,h,dx,dy = 600,300,200,100
            win.geometry("%dx%d+%d+%d" % (w, h, self.x + dx, self.y + dy))
            #win.attributes("-topmost", True)
            win.grab_set()
            win.transient(self.window)
            win.resizable(0, 0)
            mframe = Frame(win,background="#74E6F9'",bd = 5,highlightbackground="black")
            mframe.pack(fill=BOTH,expand=True)
            mlabel = Label(mframe,text="Backup",bg='#74E6F9',foreground="white",font=("Helvetica", 22,'bold'))
            mlabel.pack(fill=X)
            lframe = Frame(mframe,background="#74E6F9")
            lframe.pack(fill=X)
            frame = Frame(mframe,background="#74E6F9",bd = 5,highlightbackground="black")
            frame.pack(fill=BOTH,expand=True)
            label = Label(lframe,text = "Select desired option",background="#74E6F9",font = ('',15))
            label.pack(side=LEFT)
            addr = Entry(frame,bd = 5,font = ('',13))
            user = Entry(frame,bd = 5,font = ('',13))
            passw = Entry(frame,bd = 5,font = ('',13))
            luser = Label(frame,text = "user",background="#74E6F9",font = ('',13))
            lpassw = Label(frame,text = "password",background="#74E6F9",font = ('',13))
            llbl1 = Label(frame,text='',background="#74E6F9",font = ('',13))
            def browse_button():
                filename = filedialog.askdirectory()
                if len(filename)<20:
                    addr.configure(width=20)
                else:
                    addr.configure(width=len(filename)+3)
                addr.delete(0,END)
                addr.insert(0,filename)
            button2 = Button(frame,text="Browse",bd = 3 ,font = ('',11),padx=5,pady=5,command = browse_button)
            dummylab = Label(frame,text="",background="#74E6F9",width=3,font = ('',11))
            def callback(sv):
                llbl1.grid(row=3, column=0)
                addr.grid(row=3, column=1)
                if sv.get() == 1:
                    user.grid_forget()
                    passw.grid_forget()
                    luser.grid_forget()
                    lpassw.grid_forget()
                    llbl1.configure(text = "Path")
                    label.configure(text = "Enter or browse local address" )
                    dummylab.grid(row=3,column=3)
                    button2.grid(row=3,column=4)
                else:
                    llbl1.configure(text = "Address")
                    button2.grid_forget()
                    label.configure(text = "Enter ftp server detail" )
                    luser.grid(row = 4)
                    lpassw.grid(row=5)
                    user.grid(row=4, column=1)
                    passw.grid(row=5, column=1)
                    
                    
            v = IntVar()
            v.trace("w", lambda name, index, mode, sv=v: callback(sv))
            Radiobutton(frame, 
                          text="local",
                          padx = 20, 
                          variable=v, 
                          value=1,background="#74E6F9",font = ('',13)).grid(row=0, column=0)
            Radiobutton(frame, 
                          text="server",
                          padx = 20, 
                          variable=v, 
                          value=2,background="#74E6F9",font = ('',13)).grid(row=0, column=1)
            
            def go():
                if v.get()==1:
                    addr1 = addr.get().replace("/","\\")
                    if path.exists(addr1):
                        obj = winop(addr1)
                        _,free = obj.get_drivestats()
                        free = free / (1024.0 ** 3)
                        if free >= 0.52:
                            try:
                                status = subprocess.check_call('copy restaurent_pos.db '+addr1, shell=True)
                            except Exception as msg:
                                showinfo("Error","Backup is unsuccessful")
                                logging.debug(str(msg))
                                return
                        else:
                            showinfo("Error","Not enugh space")
                            return
                    else:
                        showinfo("Error","Path doesn't exist")
                        return
                elif v.get()==2:
                    try:
                        session = ftplib.FTP(addr.get(),user.get(),passw.get())
                        file = open('restaurent_pos.db','rb')
                        session.storbinary('STOR '+'bak.db', file)
                        file.close()
                        session.quit()
                    except:
                        showinfo("Error","Fields values are incorrect")
                        return
                else:
                    showinfo("Error","Select desired option for backup")
                    return

                showinfo("Confirm","Backup is completed successfully")
                self.main_devision()
                win.destroy()
            buttframe = Frame(mframe,bg = "#74E6F9")
            buttframe.pack(fill=X,side=BOTTOM)     
            button1 = Button(buttframe,text="GO",bd = 3 ,font = ('',13),padx=5,pady=5,command=go)
            button1.pack(side=RIGHT)
        
    def scedule_backup(self):
        with sqlite3.connect('restaurent_pos.db') as db:
            c = db.cursor()
            c.execute("SELECT location from Defaulte WHERE Name = 'Backup'")
            path = c.fetchone()[0]
            try:
                status = subprocess.check_call('copy restaurent_pos.db '+f'"{path}"', shell=True)
                return 1
            except Exception as msg:
                showinfo("Error","Backup is unsuccessful")
                return 0
            db.close()

    def def_backup(self,aframe=None):
        width = 500
        height = 400
        if aframe:
            mframe=aframe
        else:
            master=self.window
            self.window.resizable(False,False)
            frm_width = master.winfo_rootx() - master.winfo_x()
            win_width = width + 2 * frm_width
            titlebar_height = master.winfo_rooty() - master.winfo_y()
            win_height = height + titlebar_height + frm_width
            x = master.winfo_screenwidth() // 2 - win_width // 2
            y = master.winfo_screenheight() // 2 - win_height // 2-30
            master.geometry('{}x{}+{}+{}'.format(width, height, x, y))
            master.deiconify()
            mframe = Frame(master,background="#74E6F9",bd = 5,highlightbackground="black")
            mframe.pack(fill=BOTH,expand=Y)
        mlabel = Label(mframe,text="Set Default Backup Location",bg='#74E6F9',foreground="black",font=("arial", 22,'bold'))
        mlabel.pack(fill=X)
        master.wm_title("Backup")
        frame=Frame(mframe)
        frame.pack(fill=BOTH,expand=Y)
        # Label(frame,text="",bg='SkyBlue1',foreground="white",font=("Helvetica", 22,'bold')).grid(row=0)
        Label(frame,text="Path",width=20,bg="#74E6F9",font = ('arial 10 bold')).grid(row=1,column=0,sticky="w")
        # Label(frame,text="",width=3,font = ('',12)).grid(row=1,column=2,sticky="w")
        addr = Entry(frame,bd = 5,font = ('',13))
        addr.grid(row=1,column=1)
        def browse_button():
            filename = filedialog.askdirectory()
            if len(filename)>20:
                addr.configure(width=20)
            else:
                addr.configure(width=len(filename)+3)
            addr.delete(0,END)
            addr.insert(0,filename)
        button2 = Button(frame,text="Browse",bd = 3 ,font = ('',11),padx=5,pady=5,command = browse_button)
        button2.grid(row=1,column=3)
        def go():
            addr1 = addr.get().replace("/","\\")
            date= self.today
            if path.exists(addr1):
                obj = winop(addr1)
                _,free = obj.get_drivestats()
                free = free / (1024.0 ** 3)
                if free >= 0.5:
                    with sqlite3.connect('restaurent_pos.db') as db:
                        c = db.cursor()
                    if aframe:
                        c.execute("""UPDATE Defaulte SET Location=? where Name='Backup'""",(addr1,))
                        db.commit()
                        db.close()
                        self.scedule_backup()
                        self.window.destroy()
                    else:
                        c.execute("""INSERT INTO Defaulte(Name,Location,description,date) VALUES(?,?,?,?)""",('Backup',addr1,'local',date))
                        db.commit()
                        #c.close()
                        mframe.destroy()
                        if c.execute("SELECT * FROM Defaulte where Name='Backup'"):
                            rows = c.fetchone()
                            self.s_frame.place_forget()
                            #self.u_frame.place_forget()
                            ms.showinfo("Success","Your Restaurent Pos in now ready for use.")
                            self.main_devision()
                            #self.o_frame.place_forget()
                            #self.main_devision()
                        else:
                            self.store_details()
                else:
                    showerror("Error","Low disk space")
            else:
                showerror("Error","Path doesn't exist")

        Frame(frame,bd=0,bg ="#85E6F6",height=100).grid(row=2)
        butbar = Frame(mframe,background="#85E6F6")
        butbar.pack(side = BOTTOM,fill=X)
        addr.bind("<Return>",go)
        button1 = Button(butbar,text="Next",bd = 3 ,font = ('',13),padx=5,pady=5, command=go)
        button1.pack(side=RIGHT)

    def popup_que(self):
            answer=ms.askquestion("Quit", "Are you sure ?")
            if answer=="yes":
                if self.scedule_backup() ==0:
                    win= Toplevel()
                    #self.backup(win)
                    return
                self.window.destroy()


    def log_in(self):
        #self.s_frame.place_forget()
        #self.u_frame.place_forget()
        master=self.window
        width = 600
        frm_width = master.winfo_rootx() - master.winfo_x()
        win_width = width + 2 * frm_width
        height = 370
        master.wm_title("Log in")
        titlebar_height = master.winfo_rooty() - master.winfo_y()
        win_height = height + titlebar_height + frm_width
        x = master.winfo_screenwidth() // 2 - win_width // 2
        y = master.winfo_screenheight() // 2 - win_height // 2-30
        master.geometry('{}x{}+{}+{}'.format(width, height, x, y))
        master.deiconify()
        self.u_frame = Frame(self.window,width=600,height=370)
        self.u_frame.place(relx=0,rely=0)
        self.window.resizable(False,False)
        self.panel = Label(self.u_frame,image=self.login_im)
        self.userNameVar = StringVar()
        self.passwordVar = StringVar()
        self.user_name = Entry(self.u_frame,bd = 5,font = ('Helvetica 14 '),textvariable=self.userNameVar)
        self.user_name.place(relx=0.5,rely=0.36)
        self.password_entry = Entry(self.u_frame,bd = 5,font = ('Helvetica 14 '),show = '*',textvariable=self.passwordVar)
        self.password_entry.place(relx=0.5,rely=0.53)
        self.password_entry.bind("<Return>",self.login)
        self.login_button = Button(self.u_frame,text = ' Login ',bg='#63DEF6' ,font = ('Arial 12 bold'),width=10,
            command=self.login,activebackground="#07C6D5")
        self.login_button.place(relx=0.68,rely=0.7)
        #self.login_button.bind('<Enter>',self.log_in)
        self.new_user = Button(self.u_frame,text = ' Create New Account ',bg='#63DEF6' ,font = ('Arial 12 bold '),width=20,command=self.sign_up)
        self.new_user.place(relx=0.25,rely=0.7)
        self.forget_paswrd = Button(self.u_frame,text = ' Forgot Password ',bg="#F3F9FA",underline=5,relief=RIDGE,font = (' 8  '),command=self.forget_passwd)
        self.panel.place(relx=0,rely=0)
        #self.window.destroy()

    
    def login(self,*kwargs):
    	with sqlite3.connect('restaurent_pos.db') as db:
    		db.row_factory = sqlite3.Row
    		c = db.cursor()
    	if self.user_name.get()=="" or self.password_entry.get()=="":
    		showerror(title = "Error", message = "Please fill valid details.")
    		return
    	else:
    		c.execute('SELECT * FROM user WHERE username = ? and password = ?',(self.user_name.get(),self.password_entry.get(),))
    		result = c.fetchall()
    		if not result:
    			ms.showerror("Error","User Not Found.")
    			self.forget_paswrd.place(relx=0.63,rely=0.8)
    			return
    		else:
    			c.execute("SELECT * from Restaurent_Details")
    			detal = [dict(row) for row in c.fetchall()]
    			c.execute("SELECT * FROM Defaulte where Name='Backup'")
    			rows = c.fetchone()
    			if not detal:
    				self.store_details()
    			elif not rows:
    				self.backup()
    			else:
    				resp,dur,count = self.licence()
    				if resp == 3:
    					ms.showerror("Error","Kindly Connect to Internet to Sync Licence")
    				elif resp==2:
    					if dur:
    						if dur==0:
    							self.elisence()
    							ms.showerror("Expired","Licence is expired")
    							return
    						elif dur<10:
    							ms.showinfo("Licence",f"Your licence is about to expire {dur} days left")
    							self.main_devision()
    						elif count>20:
    							ms.showinfo("Licence","Kindly connect to internet to sync licence")
    						else:
    							self.main_devision()
    					else:
    						self.main_devision()
    				elif resp == 1:
    					ms.showerror("Expired","Licence is Invalid")
    					self.elisence(vlis)
    				elif resp == 0:
    					ms.showerror("Not Registered","Kindly register first")
    					self.log_in()
    				elif resp==5:
    					ms.showinfo("Change","Machine change is detacted .")
    					self.elisence(vlis)
    					return
    				elif resp==6:
    					ms.showinfo("Blocked","you have exceded maximum retries \n Kindly contact Administrator.")
    					self.log_in()
    					return
            	    #self.main_devision()
                            
    def callback(self):
        webbrowser.open_new(r"http://www.youtube.com")

    def clear_all(self):
        self.full_name_entry.delete("0",END)
        self.user_name_entry.delete("0",END)
        self.password_entry.delete("0",END)
        self.email_entry.delete("0",END)
        self.contact_entry.delete("0",END)


    def new_user_1(self):
        with sqlite3.connect('restaurent_pos.db') as db:
            c = db.cursor()
       
        full_name = self.full_name_entry.get()
        user_name = self.user_name_entry.get()
        password = self.password_entry_1.get()
        #e_mail = self.email_entry.get()
        contect_number = self.contact_no_entry2.get()
        user_qus = self.qus_combo.get()
        answer = self.ans_ent.get()
        
        c.execute("INSERT INTO user (full_name,username,password,contact_number,User_question,Answer) VALUES (?,?,?,?,?,?)",(full_name,user_name,password,contect_number,user_qus,answer))
        db.commit()
        c.close()    
        

    def login_to(self):
        self.s_frame.place_forget()
        self.log_in()

    def sign_up(self,aframe=None,*args):
        self.u_frame.place_forget()
        self.m_frame.destroy()
        master=self.window
        width = 680
        frm_width = master.winfo_rootx() - master.winfo_x()
        win_width = width + 2 * frm_width
        height = 500
        titlebar_height = master.winfo_rooty() - master.winfo_y()
        win_height = height + titlebar_height + frm_width
        x = master.winfo_screenwidth() // 2 - win_width // 2
        y = master.winfo_screenheight() // 2 - win_height // 2-30
        master.geometry('{}x{}+{}+{}'.format(width, height, x, y))
        master.deiconify()
        self.window.wm_title("Sign up")
        self.s_frame = Frame(self.window,width=680,height=500,bg="#9AF1F9")
        self.s_frame.place(relx=0,rely=0)
        self.panel = Label(self.s_frame,image=self.sign_im)
        self.panel.place(relx=0,rely=0)
        self.full_name_entry = Entry(self.s_frame,bd=2,width=30)
        self.full_name_entry.place(relx=0.59,rely=0.185)
        self.user_n = StringVar()
        self.user_name_entry = Entry(self.s_frame,width=30,bd=2,textvariable=self.user_n)
        self.user_name_entry.place(relx=0.59,rely=0.27)
        self.password_entry_1 = Entry(self.s_frame,width=30,bd=2,show="*")
        self.password_entry_1.place(relx=0.59,rely=0.35)
        self.password_entry_2 = Entry(self.s_frame,width=30,bd=2,show="*")
        self.password_entry_2.place(relx=0.59,rely=0.43)
        # self.email_entry = Entry(self.s_frame,width=30,bd=2)
        # self.email_entry.place(relx=0.59,rely=0.51)
        self.validation = window.register(self.only_numbers)

        phonesv = StringVar()
        self.contact_no_entry2 = Entry(self.s_frame,width=30,bd=2,textvariable=phonesv)
        self.contact_no_entry2.place(relx=0.59,rely=0.51)
        phonesv.trace("w", lambda name, index, mode, sv=phonesv: self.mcallback(sv))
        self.qus_combo = ttk.Combobox(self.s_frame,width=28)
        self.qus_combo.place(relx=0.59,rely=0.6)
        self.qus_combo.set("Select Question")
        self.qus_combo["values"] = ("What is your favourite movies name ?","What is your childhood name?","What is your first school name ?","What is your favourite actress name ?")
        self.ans_ent = Entry(self.s_frame,width=30,bd=2)
        self.ans_ent.place(relx=0.59,rely=0.69)
        #self.ans_ent.bind("<Return>",self.Nextt)
        def error1(i,rem1=None):
            if rem1 is not None:
                try:
                    i.configure(highlightbackground="#F0F0F0", highlightcolor="#F0F0F0", highlightthickness=1)
                except:
                    pass
            else:
                try:
                    i.configure(highlightbackground="red", highlightcolor="red", highlightthickness=1)
                except:
                    pass

        def m1set(val1):
            if val1 == 0:
                self.m1.set(val1)
            else:
                if self.m1.get().strip()!="0" :
                    self.m1.set(val1)

        def Nextt():
            self.m1.set('')
            dlis1 = [self.user_name_entry,self.contact_no_entry2,self.full_name_entry,self.password_entry_1,self.password_entry_2,self.qus_combo,self.ans_ent]
            vlis1 = []
            for i in dlis1:
                temp1 = i.get()
                if temp1 =="":
                    error1(i)
                    m1set(0)
                elif i == self.contact_no_entry2 and len(self.contact_no_entry2.get())<10:
                        error1(i)
                        m1set(0)
                elif i == self.password_entry_1 and self.password_entry_2 and self.password_entry_1.get()!= self.password_entry_2.get():
                	error1(i)
                	m1set(0)
                elif i == self.user_name_entry:
                	with sqlite3.connect('restaurent_pos.db') as db:
                		c = db.cursor()
                	find_user = ('SELECT * FROM user WHERE username = ?')
                	c.execute(find_user,[(self.user_name_entry.get())])
                	if c.fetchone():
                		ms.showerror('Error!','Username Taken Try a Diffrent One.')
                		self.user_name_entry.delete("0",END)
                		return
                # elif i == self.email_entry:
                #     match = re.search(r'[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+', i.get(),re.I)
                #     try:
                #         match.group()
                #     except:
                #         error1(i)
                #         m1set(0)
                else:
                    error1(i,1)
                    m1set(1)
                
                vlis1.append(temp1)
            #print(mset)
            if self.m1.get()!="1":
                return
            #self.save_1()
            self.new_user_1()
            self.s_frame.place_forget()
            self.log_in()
            ms.showinfo("Success","Account Created Successfully.")
            #self.m_frame.place_forget()
        self.create_account = Button(self.s_frame,text = 'Sign Up',width=10,bg="#63DEF6",font = ('Helvetica 12 bold'),command=Nextt)
        self.create_account.place(relx=0.62,rely=0.85)
        self.go_to_login = Button(self.s_frame,text = 'Back to Login',width=15 ,bg="#63DEF6",font = ('Helvetica 12 bold'),command=self.login_to)
        self.go_to_login.place(relx=0.25,rely=0.85)

    def restaurent_details_d(self,*args):
    	with sqlite3.connect('restaurent_pos.db') as db:
    		c = db.cursor()

    	Store_name = self.store_name_entry.get()
    	Contact_no = self.contact_no_entry.get()
    	E_mail = self.email_entry1.get()
    	Website = self.website_entry.get()
    	Address = self.address_entry.get()
    	Pin = self.pin_entry.get()
    	City = self.city_entry.get()
    	State = self.state_combo.get()
    	Country = self.country_combo.get()
    	Gst_no = self.gst_entry.get()

    	c.execute('INSERT INTO Restaurent_Detail (Store_name,Contact_number,E_mail,Website,Address,Pin,City,State,Country,Gst_no) VALUES(?,?,?,?,?,?,?,?,?,?)',(Store_name,Contact_no,E_mail,Website,Address,Pin,City,State,Country,Gst_no))
    	db.commit()
    	c.close()
     

    def restaurent_details_db(self,vlis,*args):
    	with sqlite3.connect('restaurent_pos.db') as db:
    		c = db.cursor()

    	Store_name = self.store_name_entry.get()
    	Contact_no = self.contact_no_entry.get()
    	E_mail = self.email_entry1.get()
    	Website = self.website_entry.get()
    	Address = self.address_entry.get()
    	Pin = self.pin_entry.get()
    	City = self.city_entry.get()
    	State = self.state_combo.get()
    	Country = self.country_combo.get()
    	Gst_no = self.gst_entry.get()

    	c.execute('INSERT INTO Restaurent_Details (Store_name,Contact_number,E_mail,Website,Address,Pin,City,State,Country,Gst_no) VALUES(?,?,?,?,?,?,?,?,?,?)',(Store_name,Contact_no,E_mail,Website,Address,Pin,City,State,Country,Gst_no))   	
    	db.commit()
    	#c.close()
    	self.restaurent_details_d()
    	self.def_backup()
     
    def mcallback(self,sv,arg=None):
            if sv.get()=="":
                return
            if arg=='self.gst_entry':
                    	sv.set(''.join(e for e in sv.get() if e.isalnum()))
                    	if len(sv.get())>15:
                    		sv.set(sv.get()[:15])

            elif arg == 'self.email_entry1':
            	match = re.search(r'[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+', i.get(),re.I)
            	try:
            		match.group()
            	except:
            		error1(i)
            		m1set(0)

            elif arg == 'self.website_entry':
            	match = re.search(r'[a-zA-Z0-9_.+-]+WWW[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+', i.get(),re.I)
            	try:
            		match.group()
            	except:
            		error1(i)
            		m1set(0)

            else:        
                sv.set(re.sub("\D", "",sv.get()))
                if arg is not None:
                    if arg=='area':
                        if len(sv.get())>4:
                            sv.set(sv.get()[:4])

                    if arg=='self.pin_entry':
                        if len(sv.get())>6:
                            sv.set(sv.get()[:6])
                else: 
                    if len(sv.get()) >= 10:
                        sv.set(sv.get()[:5]+sv.get()[5:10])
    

    def store_details(self,*args):
        #self.u_frame.place_forget()
        master=self.window
        width = 700
        frm_width = master.winfo_rootx() - master.winfo_x()
        win_width = width + 2 * frm_width
        height = 580
        titlebar_height = master.winfo_rooty() - master.winfo_y()
        win_height = height + titlebar_height + frm_width
        x = master.winfo_screenwidth() // 2 - win_width // 2
        y = master.winfo_screenheight() // 2 - win_height // 2-30
        master.geometry('{}x{}+{}+{}'.format(width, height, x, y))
        master.deiconify()
        master.wm_title("Restaurent Details")
        self.o_frame = Frame(self.window,width=700,height=580,bg="#9AF1F9")
        self.o_frame.place(relx=0,rely=0)
        self.top_label = Label(self.o_frame,text="Restaurent Details",bg="#85E6F6",width=60,height=2,font=('Arial 14 bold'))
        self.top_label.place(relx=0,rely=0)
        self.store_name_lable = Label(self.o_frame,text='*Restaurent Name :',width=15,font=('Arial 10 bold'))
        self.store_name_lable.place(relx=0.05,rely=0.11)
        self.store_name_entry = Entry(self.o_frame,width=25,bd=2)
        self.store_name_entry.place(relx=0.25,rely=0.11)
        self.contact_no_lable = Label(self.o_frame,text='*Contact Number :',width=15,font=('Arial 10 bold'))
        self.contact_no_lable.place(relx=0.53,rely=0.11)
        phonesv = StringVar()
        self.contact_no_entry = Entry(self.o_frame,width=25,bd=2,textvariable=phonesv)
        self.contact_no_entry.place(relx=0.72,rely=0.11)
        phonesv.trace("w", lambda name, index, mode, sv=phonesv: self.mcallback(sv))

        self.E_mail_lable = Label(self.o_frame,text='E-mail :',width=15,font=('Arial 10 bold'))
        self.E_mail_lable.place(relx=0.05,rely=0.19)
        self.email_entry1 = Entry(self.o_frame,width=25,bd=2)
        self.email_entry1.place(relx=0.25,rely=0.19)

        self.website_lable = Label(self.o_frame,text='Website :',width=15,font=('Arial 10 bold'))
        self.website_lable.place(relx=0.53,rely=0.19)
        self.website_entry = Entry(self.o_frame,width=25,bd=2)
        self.website_entry.place(relx=0.72,rely=0.19)

        self.address_lable = Label(self.o_frame,text='*Address :',width=15,font=('arial 10 bold'))
        self.address_lable.place(relx=0.05,rely=0.27)
        self.address_entry = Entry(self.o_frame,width=25,bd=2)
        self.address_entry.place(relx=0.25,rely=0.27)
        self.pin_lable = Label(self.o_frame,text='*Pin/Zip :',width=15,font=('arial 10 bold'))
        self.pin_lable.place(relx=0.53,rely=0.27)
        Postalsv = StringVar()
        self.pin_entry = Entry(self.o_frame,width=25,bd=2,textvariable=Postalsv)
        self.pin_entry.place(relx=0.72,rely=0.27)
        Postalsv.trace("w", lambda name, index, mode, sv=Postalsv: self.mcallback(sv,'self.pin_entry'))
        validation = window.register(self.only_character)

        self.city_lable = Label(self.o_frame,text='*City : ',width=15,font=('arial 10 bold'))
        self.city_lable.place(relx=0.05,rely=0.36)
        self.city_entry = Entry(self.o_frame,width=25,bd=2,validate="key", validatecommand=(validation, '%S'))
        self.city_entry.place(relx=0.25,rely=0.36)
        self.state_lable = Label(self.o_frame,text='*State :',width=15,font=('arial 10 bold'))
        self.state_lable.place(relx=0.53,rely=0.36)
        def matches(fieldValue, acListEntry):
        	pattern = re.compile(re.escape(fieldValue) + '.*', re.IGNORECASE)
        	return re.match(pattern, acListEntry)
        state = list(('Andra Pradesh','Arunachal Pradesh','Assam','Bihar',
            'Chhattisgarh','Goa','Gujarat','Haryana','Himachal Pradesh','Jammu and Kashmir',
            'Jharkhand','Karnataka','Kerala','Madya Pradesh','Maharashtra','Manipur','Meghalaya',
            'Mizoram','Nagaland','Orissa','Punjab','Rajasthan','Sikkim','Tamil Nadu','Telagana',
            'Tripura','Uttarakhand','Uttar Pradesh','West Bengal','Andaman and Nicobar Islands',
            'Chandigarh','Dadar and Nagar Haveli','Daman and Diu','Delhi','Lakshadeep','Pondicherry'))
        self.state_combo = AutocompleteEntry(state, self.o_frame, listboxLength=6,validate="key", validatecommand=(validation, '%S'),bd=2, width=25, matchesFunction=matches)
        self.state_combo.place(relx=0.72,rely=0.36) 
        # self.state_combo = ttk.Combobox(self.o_frame,width=22,values=self.state)
        # self.state_combo.place(relx=0.72,rely=0.36)
        # self.state_combo.set("Select State")
        self.country_lable = Label(self.o_frame,text='*Country :',width=15,font=('Arial 10 bold'))
        self.country_lable.place(relx=0.04,rely=0.44)
        country = list(('India','Nepal','Shri Lanka','Maldiv','China','USA','England','South Africa'))
        self.country_combo = AutocompleteEntry(country, self.o_frame,validate="key", validatecommand=(validation, '%S'),listboxLength=6,bd=2, width=25, matchesFunction=matches)
        self.country_combo.place(relx=0.25,rely=0.44)
        # self.country_combo = ttk.Combobox(self.o_frame,width=22,values=self.country)
        # self.country_combo.place(relx=0.25,rely=0.44)
        self.gst_lable = Label(self.o_frame,text='GST No. : ',width=15,font=('arial 10 bold'))
        self.gst_lable.place(relx=0.53,rely=0.44)
        gstsv = StringVar()
        self.gst_entry = Entry(self.o_frame,width=25,bd=2,textvariable=gstsv)
        self.gst_entry.place(relx=0.72,rely=0.44)
        gstsv.trace("w", lambda name, index, mode, sv=gstsv: self.mcallback(sv,'self.gst_entry'))
        def error_(i,rem=None):
            if rem is not None:
                try:
                    i.configure(highlightbackground="#F0F0F0", highlightcolor="#F0F0F0", highlightthickness=1)
                except:
                    pass
            else:
                try:
                    i.configure(highlightbackground="red", highlightcolor="red", highlightthickness=1)
                except:
                    pass
        def mset(val):
            if val == 0:
                self.m.set(val)
            else:
                if self.m.get().strip()!="0" :
                    self.m.set(val)
        def Next():
            self.m.set('')
            dlis = [self.store_name_entry,self.contact_no_entry,self.email_entry1,self.website_entry,self.country_combo,self.address_entry,self.pin_entry,self.city_entry,self.gst_entry,self.state_combo]
            vlis = []
            for i in dlis:
                temp = i.get()
                if temp =="":
                    error_(i)
                    mset(0)
                elif i == self.pin_entry and len(self.pin_entry.get())<6:
                    error_(i)
                    mset(0)
                # elif i == self.country_combo:
                #     if self.country_combo.get():
                #         error_(i)
                #         mset(0)
                elif i == self.contact_no_entry and len(self.contact_no_entry.get())<10:
                        error_(i)
                        mset(0)
                elif i== self.email_entry1:
                    match = re.search(r'[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+', i.get(),re.I)
                    try:
                        match.group()
                    except:
                        error_(i)
                        mset(0)
                        return
                elif i== self.gst_entry and len(self.gst_entry.get())<15:
                    error_(i)
                    mset(0)
                else:
                    error_(i,1)
                    self.m.set(1)
                vlis.append(temp)
            if self.m.get()!="1":
            	return
            try:
            	mac = getmac.get_mac_address()
            	vlis.append(mac)
            	payload = {'Shop_Name':vlis[0],'First_Name':'','Last_Name':'','Address1':vlis[5],'Address2':'','City':vlis[7],'State':vlis[9],'Postal':vlis[6],'Country':vlis[4],'Area':vlis[7],'Phone':vlis[2],'Email':vlis[2],'GST_IN':vlis[8],'mac':vlis[10]}
            	resp = requests.post("http://dpos.makemypos.com/version",payload,timeout=10)
            	dct = json.loads(resp.content.decode())
            	licence = dct['lisence']
            	self.lisencevar.set(licence)
            except Exception as msg:
            	ms.showerror("Error","Internet connection is required")
            	return
            self.elisence(vlis)
            self.restaurent_details_d()
            self.o_frame.destroy()
            #self.restaurent_details_db(vlis)
        self.bottom_frame = Frame(self.o_frame,width=700,height=80,bg="#85E6F6")
        self.bttm_lbl = Label(self.bottom_frame,text="*The fields are mandatory.",width=25,font=('Helvetica 10 bold'))
        self.bttm_lbl.place(relx=0.02,rely=0.15)
        self.submit_button = Button(self.bottom_frame,text="Submit",width=10,height=2,command=Next,font=('arial 10 bold'))
        self.submit_button.place(relx=0.42,rely=0.15)
        # self.close_button = Button(self.main_frame,text="Close",width=10,height=2,command=self.main_devision,font=('arial 10 bold'))
        # self.close_button.place(relx=0.48,rely=0.9)
        self.bottom_frame.place(relx=0,rely=0.6)

    def version(self,u=None):
    	def download():
    		setup_url = "http://makemypos.com/Setup.exe"
    		r = requests.get(setup_url) 
    		with open("setup.exe",'wb') as f: 
    			f.write(r.content)
    			#self.dummp.set(1)
    	def upgra_call():
    		system('set.vbs')

    	def after_dwn():
    		dwn_thread.join()
    		try:
    			Thread(target=upgra_call).start()
    		except:
    			showinfo("Error","Upgrade is unsuccessful")
    			return
    	def load_():
    		win = Toplevel()
    		size = tuple(int(_) for _ in win.geometry().split('+')[0].split('x'))
    		x = GetSystemMetrics(0)/2 - size[0]/2
    		y = GetSystemMetrics(1)/2 - size[1]/2
    		win.geometry("+%d+%d" % (x, y))
    		win.transient(self.window)
    		win.overrideredirect(True)
    		win.grab_set()
    		win.lift()
    		win.attributes('-topmost',True)
    		Spinner4(win, size=48).pack (side=LEFT)
    		Label(win,text = "Update in progress").pack()
    	try:
    		if path.isfile('Setup.exe'):
    			subprocess.call('del Setup.exe', shell=True)
    		url = "http://dpos.makemypos.com/version?user=deepak&pass=123"
    		r = requests.get(url,timeout=5)
    		version = json.loads(r.content)['version']
    		if VERSION != str(version):
    			answer = askquestion("Update","update available, to update now click yes")
    			if answer == "yes":
    				#self.master.iconify()
    				load_thread = Thread(target=load_)
    				load_thread.start()
    				dwn_thread = Thread(target=download)
    				dwn_thread.start()
    				metadata_thread = Thread(target=after_dwn)
    				metadata_thread.start()
    		else:
    			if u is None:
    				showinfo("Update","No update available") 
    	except Exception as msg:
    		print(str(msg))

    def elisence(self,vlis):
    	master=self.window
    	width = 450
    	frm_width = master.winfo_rootx() - master.winfo_x()
    	win_width = width + 2 * frm_width
    	height = 300
    	titlebar_height = master.winfo_rooty() - master.winfo_y()
    	win_height = height + titlebar_height + frm_width
    	x = master.winfo_screenwidth() // 2 - win_width // 2
    	y = master.winfo_screenheight() // 2 - win_height // 2-30
    	master.geometry('{}x{}+{}+{}'.format(width, height, x, y))
    	master.deiconify()
    	self.u_frame.destroy()
    	oframe = Frame(self.window,bg="#29F0FA")
    	oframe.pack(fill=BOTH)
    	licence = self.lisencevar.get()
    	#print(licence)
    	if licence != "done":
    		Label(oframe,text = licence,background="#34EDF6",font = ('',15),pady = 10).pack()
    		def submit():
    			f = filedialog.asksaveasfile(mode='w', defaultextension=".txt",filetypes=(("text file", "*.txt"),("All Files", "*.*") ),parent=self.window)
    			if f is None:
    				return
    			f.write(licence)
    			f.close()
    			vlis.append(licence)
    			with sqlite3.connect('restaurent_pos.db') as db:
    				c = db.cursor()
    			c.execute(f"INSERT INTO Restaurent_Details (Store_name,Contact_number,E_mail,Website,Address,Pin,City,State,Country,Gst_no,mac,lisence) VALUES {tuple(vlis)}")
    			db.commit()
    			db.close()
    			oframe.destroy()
    			self.def_backup()
    		Button(oframe,text = "Export",bd = 3 ,font = ('',13),padx=5,pady=5,command = submit ).pack(side=BOTTOM)
    	else:
    		lisen = Entry(oframe,bd = 5,font = ('',13))
    		lisen.pack()
    		def submit():
    			if not lisen.get():
    				ms.showerror("Error","Kindly enter Lisence key")
    			else:
    				lisenceKey = lisen.get()
    				vlis.append(lisenceKey)
    				with sqlite3.connect('restaurent_pos.db') as db:
    					c = db.cursor()
    				c.execute(f"INSERT INTO Restaurent_Details (Store_name,Contact_number,E_mail,Website,Address,Pin,City,State,Country,Gst_no,mac,lisence) VALUES {tuple(vlis)}")
    				db.commit()
    				db.close()
    				oframe.destroy()
    				self.def_backup()
    		Button(oframe,text = "Import",bd = 3 ,font = ('',13),padx=5,pady=5,command = submit ).pack(side=BOTTOM)
    	self.window.resizable(False,False)

    def about(self):
        win = Toplevel()
        win.geometry("400x200")
        win.update_idletasks()
        size = tuple(int(_) for _ in win.geometry().split('+')[0].split('x'))
        x = GetSystemMetrics(0)/2 - size[0]/2
        y = GetSystemMetrics(1)/2 - size[1]/2
        win.geometry("+%d+%d" % (x, y))
        win.grab_set()
        win.wm_title("About")
        Label(win).pack()
        Label(win,text="Restaurent Pos").pack()
        Label(win,text = "Registered").pack()
        Label(win,text="Copyright © 2020-2021 MNTech Enterprises Pvt. Ltd.").pack()
        Label(win,text = f"Version {VERSION} Build 2020").pack()

    def help(self):
        win = Toplevel()
        win.geometry("450x200")
        win.update_idletasks()
        size = tuple(int(_) for _ in win.geometry().split('+')[0].split('x'))
        x = GetSystemMetrics(0)/2 - size[0]/2
        y = GetSystemMetrics(1)/2 - size[1]/2
        win.geometry("+%d+%d" % (x, y))
        win.grab_set()
        Label(win,text="Restaurent Pos").pack()
        Label(win,text = "Help").pack()
        Label(win,text="Contact admin for help.").pack()
        Label(win,text="MNTech Enterprises").pack()
        Label(win,text="www.mymntech.com").pack()
        Label(win,text="SCO 25,2nd Floor,Nr.Tricity Autos.").pack()
        Label(win,text="Zirakpur-Patiala,Highway,").pack()
        Label(win,text="Zirakpur-140603-Punjab").pack()
        Label(win,text="+91-7527095200/7527095207").pack()
    
    def view_(self,data_frame,headings,rows):
        l = []
        for i in range(1,len(headings)+1):
            l.append("column"+str(i))
        tree= ttk.Treeview(data_frame,style="Custom.Treeview",column=tuple(l), show='headings')
        for i,text in enumerate(headings,1):
            tree.heading("#"+str(i),text=text)
            if i ==1:
                tree.column("#"+str(i),minwidth=0,width=50)
            else:
                tree.column("#"+str(i),minwidth=0,width=105,anchor=CENTER)
        tree.pack(fill=BOTH,expand=True,side=LEFT)
        vsb = ttk.Scrollbar(data_frame, orient="vertical", command=tree.yview)
        vsb.pack(side=RIGHT,fill="y")
        tree.configure(yscrollcommand=vsb.set)
        # hsb = ttk.Scrollbar(data_frame, orient="horizontal", command=tree.xview)
        # hsb.pack(side=BOTTOM,fill="x")
        # tree.configure(xscrollcommand=hsb.set)
        nametofont("TkHeadingFont").configure(size=12)
        ttk.Style().configure("Treeview.Heading", background="#2980B9",foreground="white",font=("",12,"bold"))
        ttk.Style().configure(".", font=('Helvetica', 11))
        ttk.Style().configure('Treeview', selectbackground='red')
        for i,row in enumerate(rows):
            if i%2==0:
                tree.insert("", END, values=row,tags = ('evenrow',))
            else:
                tree.insert("", END, values=row,tags = ('oddrow',))
            tree.tag_configure('oddrow', background='#F6F6F6')
        tree.tag_configure('evenrow', background='#E8E8E8')

    def get_store_details(self):
        with sqlite3.connect('restaurent_pos.db') as db:
            c = db.cursor()

        self.data_1 = [Kitchen_store for Kitchen_store in c.execute("SELECT * FROM Kitchen_store")]
        win = Toplevel(self.window)
        win.geometry("%dx%d%+d%+d" % (700, 300, 240, 80))
        win.grab_set()
        win.transient(self.window)
        win.resizable(0, 0)
        win.wm_title("Add Item's")
        self.m_frame = Frame(win,width=700,height=300)
        self.m_frame.place(relx=0,rely=0.15)
        headings = ('S.no.','Date','Time', 'Item_name','Quantity','Rate','Chef')
        self.top_label = Label(win,text="Available Stock Data",height=2,bg="#85E6F6",width=60,font=('Arial 14 bold'))
        self.top_label.place(relx=0,rely=0)
        self.view_(self.m_frame,headings,self.data_1)
        
    def close_window_1(self): 
        window.destroy()

    def add_table(self,*args):
        win = Toplevel(self.window)
        win.geometry("%dx%d%+d%+d" % (400, 500, 100, 80))
        win.grab_set()
        win.transient(self.window)
        win.resizable(0, 0)
        win.wm_title("Add New Table's")
        self.top_label = Label(win,text="Add New Table",bg="#85E6F6",width=50,height=2,font=('Arial 10 bold'))
        self.top_label.place(relx=0,rely=0)
        txt_lbl = Label(win,text="New Table No. :",width=15,font=('arial 10 bold'))
        txt_lbl.place(relx=0.1,rely=0.14)
        validation = window.register(self.mix)
        no_entry = Entry(win,width=25,bd=3,validate="key", validatecommand=(validation, '%S'))
        no_entry.place(relx=0.43,rely=0.14)
        self.top_label1 = Label(win,text="Table's Details:",bg="#85E6F6",width=50,height=2,font=('Arial 10 bold'))
        self.top_label1.place(relx=0,rely=0.34)
        self.lst = [
        ]
        self.treet = ttk.Treeview(win, style="Custom.Treeview")
        vsb = ttk.Scrollbar(win, orient="vertical", command=self.treet.yview)
        vsb.pack(side='right', fill='y')
        self.treet.configure(yscrollcommand=vsb.set)
        self.treet.heading('#0', text="Already added table's")
        self.treet.column('#0',width=160, stretch=YES)
        self.treet.place(relx=0.3,rely=0.42)
        self.treeview = self.treet
        
        with sqlite3.connect('restaurent_pos.db') as db:
        	c = db.cursor()
        query = c.execute('SELECT Table_no FROM Tables')
        for row in c.fetchall():
        	self.lst.append(row[0])
       
        for j in self.lst:
        	self.treeview.insert('', 'end',text=""+str(j))
        	
        def table_db(*args):
        	with sqlite3.connect('restaurent_pos.db') as db:
        		c = db.cursor()
        	find_table = ('SELECT * FROM Tables WHERE Table_no = ?')
        	c.execute(find_table,[(no_entry.get())])
        	if c.fetchone():
        		ms.showerror('Error!','Table Already added.')
        		no_entry.delete("0",END)
        		return
        	elif no_entry.get()=='':
        		ms.showerror("Error","Insert valid no")
        		return
        	else:
        		with sqlite3.connect('restaurent_pos.db') as db:
        			c = db.cursor()
        		tbl_no = no_entry.get()
        		c.execute("INSERT INTO Tables(Table_no) VALUES(?)",(tbl_no,))
        		db.commit()
        		c.close()
        		ms.showinfo("Success","Added Successfully")
        		self.lst.append(no_entry.get())
        		for i in self.treet.get_children():
        			self.treet.delete(i)
        		
        		for k in self.lst:
        			self.treeview.insert('', 'end',text=""+str(k))

        		no_entry.delete("0",END)
        		no_entry.bind("<Return>",table_db)
      
        btn = Button(win,text="Add",font=('Arial 10 bold'),bg="#29F0FA",command=table_db,width=10,height=2)
        btn.place(relx=0.6,rely=0.2)
   
    def main_devision(self):
        #self.m_frame.place_forget()
        self.s_frame.place_forget()
        width = self.x + 1250
        height = self.y + 680
        master=self.window
        frm_width = master.winfo_rootx() - master.winfo_x()
        win_width = width + 2 * frm_width
        titlebar_height = master.winfo_rooty() - master.winfo_y()
        win_height = height + titlebar_height + frm_width
        x = master.winfo_screenwidth() // 2 - win_width // 2
        y = master.winfo_screenheight() // 2 - win_height // 2-30
        master.geometry('{}x{}+{}+{}'.format(width, height, x, y))
        master.deiconify()
        master.wm_title("Restaurent Pos")
        self.mframe = Frame(self.window,highlightbackground="black")
        self.mframe.pack(fill=BOTH,expand=Y)
        self.window.resizable(True,True)
        self.menubar = Menu(self.mframe)
        self.file = Menu(self.menubar,tearoff=0)
        self.edit = Menu(self.menubar,tearoff=0)
        self.edit = Menu(self.menubar, tearoff=0)
        self.edit_1 = Menu(self.menubar, tearoff=0)
        self.edit_2 = Menu(self.menubar, tearoff=0)
        self.edit_3 = Menu(self.menubar, tearoff=0)
        self.edit_1.add_cascade(label="Sales Bill",command=self.salling)
        self.menubar.add_cascade(label="Sales",menu=self.edit_1)
        self.edit.add_cascade(label="Add Item in Store",command=self.add_items)
        # self.edit.add_cascade(label="Selling Price Settings",command='self.selling_values')
        self.edit.add_cascade(label="Update Store",command=self.update_selling)
        # self.inventory_menu = Menu(self.file,tearoff=0)
        # self.inventory_menu = Menu(self.file,tearoff=0)
        # self.inventory_menu.add_cascade(label="Add Supplier",command='self.new_suppliers_details')
        self.menubar.add_cascade(label="Inventory",menu=self.edit)
        self.edit = Menu(self.menubar,tearoff=0)
        self.edit.add_cascade(label="Available Store data ",command=self.get_store_details)
        self.edit.add_cascade(label="Add Table's ",command=self.add_table)
        #self.edit.add_cascade(label="Store Details",command=self.store_details)
        self.edit.add_cascade(label="Update Store Details",command=self.update_store_details)
        self.edit.add_cascade(label="Add Employees",command=self.add_employees)
        self.edit.add_cascade(labe="Employee Data",command=self.get_emp_db)
        self.edit.add_cascade(labe="Check Update",command=self.version)
        self.menubar.add_cascade(label="Settings",menu=self.edit)
        self.edit_3.add_cascade(label="Add Account",command='self.account_dtl')
        #self.menubar.add_cascade(label="Account",menu= self.edit_3)
        #self.menubar.add_cascade(label="Inventory",menu=self.edit)
        self.edit_2.add_cascade(label="Daily Sales Report",command=self.get_report)
        self.edit_2.add_cascade(label="Tip Collection Report",command=self.get_tip_report)
        self.menubar.add_cascade(label="Reports",menu=self.edit_2)
        self.menubar.add_cascade(label="Help",command=self.help)
        self.menubar.add_cascade(label="About",command=self.about)
        self.menubar.add_cascade(label="Exit",command=self.popup_que)
        self.window.config(menu=self.menubar)
        self.main_frame = Frame(self.mframe)
        self.top_label = Label(self.mframe,image=self.top,height=300)
        self.top_label.place(relx=0,rely=0)

        # self.text_label = Label(self.mframe,width=18,height=2,text="Select Order Type",font='Helvetica 18 bold')
        # self.text_label.place(relx=0,rely=0.39)
        self.take_out_bttn = Button(self.mframe,width=280,height=80,image=self.image7,command=self.take_out_order)
        self.take_out_bttn.place(relx=0.02,rely=0.47)
        self.dine_bttn = Button(self.mframe,width=280,height=80,image=self.image3,command=self.dine)
        self.dine_bttn.place(relx=0.25,rely=0.47)
        self.delivery_bttn = Button(self.mframe,width=280,height=80,image=self.image2,command=self.delivery_button_cmd)
        self.delivery_bttn.place(relx=0.48,rely=0.47)
        # self.text_label_1 = Label(self.mframe,width=15,height=2,text="Add Details",font='Helvetica 18 bold')
        # self.text_label_1.place(relx=0,rely=0.59)
        self.tip_details_bttn = Button(self.mframe,width=280,height=80,image=self.image4,command=self.tip_collection)
        self.tip_details_bttn.place(relx=0.02,rely=0.66)
        self.coustmer_details_bttn = Button(self.mframe,width=280,height=80,image=self.image8,command=self.coustmer_details)
        self.coustmer_details_bttn.place(relx=0.25,rely=0.66)
        self.kot_bttn = Button(self.mframe,image=self.image1,width=280,height=80,command='self.kitchen_screen')
        self.kot_bttn.place(relx=0.48,rely=0.66)
        self.music_bttn_logo = Button(self.mframe,image=self.image6,width=280,height=80, font='Helvetica 14 bold',command=self.callback)
        self.music_bttn_logo.place(relx=0.73,rely=0.47)
        self.log_off_bttn = Button(self.mframe,width=280,height=80,image=self.image5,command=self.log_off_bttn1)
        self.log_off_bttn.place(relx=0.73,rely=0.66)
        self.main_frame.place(relx=0,rely=0)
        
if __name__ == '__main__':
	window = Tk()
	window.title("RestroPos")
	window.configure(width=1200,height=780)
	Mmpos(window)
	window.mainloop()

